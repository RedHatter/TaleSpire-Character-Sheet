{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/utils.ts","../../node_modules/svelte/store/index.mjs","../../src/DnD5e/model.ts","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/Dialog.svelte","../../src/components/TextField.svelte","../../src/components/Select.svelte","../../src/components/Checkbox.svelte","../../src/components/Container.svelte","../../src/DnD5e/Attacks.svelte","../../src/DnD5e/Trackers.svelte","../../src/DnD5e/Features.svelte","../../src/DnD5e/Equipment.svelte","../../src/DnD5e/Tools.svelte","../../src/DnD5e/OtherProficiencies.svelte","../../src/DnD5e/Skills.svelte","../../src/DnD5e/Sheet.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export function range(from = 0, to) {\n    if (to === undefined) {\n        to = from;\n        from = 0;\n    }\n    return Array.from({ length: to - from }, (_, i) => i + from);\n}\nexport function debounce(fn, delay) {\n    let timer = null;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(fn, delay, ...args);\n    };\n}\nexport function mapObject(obj, fn) {\n    return Object.fromEntries(Object.entries(obj).map(([key, val]) => [key, fn(val, key)]));\n}\nexport function enumToSelect(obj) {\n    return Object.entries(obj)\n        .filter(o => typeof o[1] === 'number')\n        .map(([text, value]) => ({ value, text }));\n}\nconst resizeObserver = new ResizeObserver(entries => {\n    for (const entry of entries) {\n        const node = entry.target;\n        node.style.backgroundImage = box(node.clientWidth, node.clientHeight);\n    }\n});\nexport function handDrawn(node) {\n    resizeObserver.observe(node);\n    return {\n        destroy() {\n            resizeObserver.unobserve(node);\n        },\n    };\n}\nfunction box(width, height) {\n    const stroke = '%23D1D5DB';\n    const strokeWidth = 1;\n    const r1 = () => Math.random() * 10 + 20;\n    const r2 = () => Math.random() * 2;\n    let path = `M ${r2()} ${r2()}`;\n    let maxX = width - strokeWidth * 2;\n    let maxY = height - strokeWidth * 2;\n    for (let x = 0; x < maxX; x += r1())\n        path += ` L ${Math.min(x, maxX).toFixed(3)} ${r2().toFixed(3)}`;\n    for (let y = 0; y < maxY; y += r1())\n        path += ` L ${(maxX - r2()).toFixed(3)} ${Math.min(y, maxY).toFixed(3)}`;\n    for (let x = maxX; x > 0; x -= r1())\n        path += ` L ${Math.max(x, 0).toFixed(3)} ${(maxY - r2()).toFixed(3)}`;\n    for (let y = maxY; y > 0; y -= r1())\n        path += ` L ${r2().toFixed(3)} ${Math.max(y, 0).toFixed(3)}`;\n    path += ' Z';\n    return `url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"${path}\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${strokeWidth}\"/></svg>')`;\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","var _a;\nimport { debounce, mapObject } from '../utils';\nimport { writable, derived as derivedStore } from 'svelte/store';\nexport var DiceType;\n(function (DiceType) {\n    DiceType[DiceType[\"D4\"] = 0] = \"D4\";\n    DiceType[DiceType[\"D6\"] = 1] = \"D6\";\n    DiceType[DiceType[\"D8\"] = 2] = \"D8\";\n    DiceType[DiceType[\"D10\"] = 3] = \"D10\";\n    DiceType[DiceType[\"D12\"] = 4] = \"D12\";\n})(DiceType || (DiceType = {}));\nexport var AbilityType;\n(function (AbilityType) {\n    AbilityType[AbilityType[\"STR\"] = 0] = \"STR\";\n    AbilityType[AbilityType[\"DEX\"] = 1] = \"DEX\";\n    AbilityType[AbilityType[\"CON\"] = 2] = \"CON\";\n    AbilityType[AbilityType[\"INT\"] = 3] = \"INT\";\n    AbilityType[AbilityType[\"WIS\"] = 4] = \"WIS\";\n    AbilityType[AbilityType[\"CHA\"] = 5] = \"CHA\";\n})(AbilityType || (AbilityType = {}));\nexport var SkillProficiencyType;\n(function (SkillProficiencyType) {\n    SkillProficiencyType[SkillProficiencyType[\"None\"] = 0] = \"None\";\n    SkillProficiencyType[SkillProficiencyType[\"Proficient\"] = 1] = \"Proficient\";\n    SkillProficiencyType[SkillProficiencyType[\"Expertise\"] = 2] = \"Expertise\";\n    SkillProficiencyType[SkillProficiencyType[\"JackOfAllTrades\"] = 3] = \"JackOfAllTrades\";\n})(SkillProficiencyType || (SkillProficiencyType = {}));\nexport class Attack {\n    constructor(name = '', attackAbility = AbilityType.STR, attackModifier = 0, proficient = true, range = '20/60 feet', damageRoll = '', damageAbility = AbilityType.STR, damageModifier = 0, damageType = '') {\n        this.name = name;\n        this.attackAbility = attackAbility;\n        this.attackModifier = attackModifier;\n        this.proficient = proficient;\n        this.range = range;\n        this.damageRoll = damageRoll;\n        this.damageAbility = damageAbility;\n        this.damageModifier = damageModifier;\n        this.damageType = damageType;\n    }\n}\nexport var ItemType;\n(function (ItemType) {\n    ItemType[ItemType[\"Item\"] = 0] = \"Item\";\n    ItemType[ItemType[\"Equipment\"] = 1] = \"Equipment\";\n})(ItemType || (ItemType = {}));\nexport class Item {\n    constructor(name = '', description = '', count = 1, weight = 0, type = ItemType.Item, isEquipped = false) {\n        this.name = name;\n        this.description = description;\n        this.count = count;\n        this.weight = weight;\n        this.type = type;\n        this.isEquipped = isEquipped;\n    }\n}\nexport class CustomSkill {\n    constructor(name = '', proficient = SkillProficiencyType.Proficient, ability = AbilityType.STR, modifier = 0, description = '') {\n        this.name = name;\n        this.proficient = proficient;\n        this.ability = ability;\n        this.modifier = modifier;\n        this.description = description;\n    }\n}\nexport var OtherProficiencyType;\n(function (OtherProficiencyType) {\n    OtherProficiencyType[OtherProficiencyType[\"Language\"] = 0] = \"Language\";\n    OtherProficiencyType[OtherProficiencyType[\"Weapon\"] = 1] = \"Weapon\";\n    OtherProficiencyType[OtherProficiencyType[\"Armor\"] = 2] = \"Armor\";\n    OtherProficiencyType[OtherProficiencyType[\"Other\"] = 3] = \"Other\";\n})(OtherProficiencyType || (OtherProficiencyType = {}));\nexport class OtherProficiency {\n    constructor(type = OtherProficiencyType.Language, name = '', source = '') {\n        this.type = type;\n        this.name = name;\n        this.source = source;\n    }\n}\nexport class Feature {\n    constructor(name = '', source = '', description = '') {\n        this.name = name;\n        this.source = source;\n        this.description = description;\n    }\n}\nexport class Tracker {\n    constructor(name = '', max = 0, current = 0) {\n        this.name = name;\n        this.max = max;\n        this.current = current;\n    }\n}\nexport class DnD5eData {\n    constructor() {\n        this.name = '';\n        this.playerClass = '';\n        this.level = 1;\n        this.background = '';\n        this.race = '';\n        this.alignment = '';\n        this.exp = 0;\n        this.abilityScores = {\n            [AbilityType.STR]: 10,\n            [AbilityType.DEX]: 10,\n            [AbilityType.CON]: 10,\n            [AbilityType.INT]: 10,\n            [AbilityType.WIS]: 10,\n            [AbilityType.CHA]: 10,\n        };\n        this.tools = [];\n        this.proficiencies = [];\n        this.inspiration = false;\n        this.proficiency = 2;\n        this.savingThrows = {\n            [AbilityType.STR]: false,\n            [AbilityType.DEX]: false,\n            [AbilityType.CON]: false,\n            [AbilityType.INT]: false,\n            [AbilityType.WIS]: false,\n            [AbilityType.CHA]: false,\n        };\n        this.skills = {\n            acrobatics: SkillProficiencyType.None,\n            animalHandling: SkillProficiencyType.None,\n            arcana: SkillProficiencyType.None,\n            athletics: SkillProficiencyType.None,\n            deception: SkillProficiencyType.None,\n            history: SkillProficiencyType.None,\n            insight: SkillProficiencyType.None,\n            intimidation: SkillProficiencyType.None,\n            investigation: SkillProficiencyType.None,\n            medicine: SkillProficiencyType.None,\n            nature: SkillProficiencyType.None,\n            perception: SkillProficiencyType.None,\n            performance: SkillProficiencyType.None,\n            persuasion: SkillProficiencyType.None,\n            religion: SkillProficiencyType.None,\n            sleightOfHand: SkillProficiencyType.None,\n            stealth: SkillProficiencyType.None,\n            survival: SkillProficiencyType.None,\n        };\n        this.armorClass = 10;\n        this.speed = 30;\n        this.hp = {\n            max: 10,\n            current: 10,\n            temp: 0,\n        };\n        this.hitDice = {\n            max: 1,\n            current: 1,\n            type: DiceType.D6,\n        };\n        this.deathSaves = {\n            success: 0,\n            failure: 0,\n        };\n        this.attacks = [];\n        this.equipment = [];\n        this.coin = 0;\n        this.traits = '';\n        this.ideals = '';\n        this.bonds = '';\n        this.flaws = '';\n        this.trackers = [new Tracker('Class Resource'), new Tracker('Other Resource')];\n        this.features = [];\n    }\n}\nexport const data = writable(((_a = JSON.parse(window.localStorage.getItem('data'))) !== null && _a !== void 0 ? _a : new DnD5eData()));\ndata.subscribe(debounce(data => window.localStorage.setItem('$data', JSON.stringify(data)), 1000));\nconst abilityNames = {\n    [AbilityType.STR]: 'Strength',\n    [AbilityType.DEX]: 'Dexterity',\n    [AbilityType.CON]: 'Constitution',\n    [AbilityType.INT]: 'Intelligence',\n    [AbilityType.WIS]: 'Wisdom',\n    [AbilityType.CHA]: 'Charisma',\n};\nexport const derived = derivedStore(data, data => {\n    const abilityScores = mapObject(data.abilityScores, (base, type) => ({\n        modifier: Math.floor((base - 10) / 2),\n        name: abilityNames[type],\n    }));\n    function getSkillModifier(ability, type) {\n        return (abilityScores[ability].modifier +\n            (type == SkillProficiencyType.Proficient\n                ? data.proficiency\n                : type == SkillProficiencyType.Expertise\n                    ? data.proficiency * 2\n                    : type == SkillProficiencyType.JackOfAllTrades\n                        ? Math.floor(data.proficiency / 2)\n                        : 0));\n    }\n    let copper = data.coin;\n    let platinum = Math.floor(copper / 1000);\n    copper = copper % 1000;\n    let gold = Math.floor(copper / 100);\n    copper = copper % 100;\n    let electrum = Math.floor(copper / 50);\n    copper = copper % 50;\n    let silver = Math.floor(copper / 10);\n    copper = copper % 10;\n    return {\n        abilityScores,\n        savingThrows: mapObject(data.savingThrows, (proficient, type) => ({\n            modifier: abilityScores[type].modifier + (proficient ? data.proficiency : 0),\n            name: abilityNames[type],\n        })),\n        tools: data.tools.map(tool => ({\n            ability: abilityNames[tool.ability],\n            modifier: getSkillModifier(tool.ability, tool.proficient),\n        })),\n        skills: {\n            acrobatics: {\n                name: 'Acrobatics (Dex)',\n                modifier: getSkillModifier(AbilityType.DEX, data.skills.acrobatics),\n            },\n            animalHandling: {\n                name: 'Animal Handling (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.animalHandling),\n            },\n            arcana: {\n                name: 'Arcana (Int)',\n                modifier: getSkillModifier(AbilityType.INT, data.skills.arcana),\n            },\n            athletics: {\n                name: 'Athletics (Str)',\n                modifier: getSkillModifier(AbilityType.STR, data.skills.athletics),\n            },\n            deception: {\n                name: 'Deception (Cha)',\n                modifier: getSkillModifier(AbilityType.CHA, data.skills.deception),\n            },\n            history: {\n                name: 'History (Int)',\n                modifier: getSkillModifier(AbilityType.INT, data.skills.history),\n            },\n            insight: {\n                name: 'Insight (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.insight),\n            },\n            intimidation: {\n                name: 'Medicine (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.intimidation),\n            },\n            investigation: {\n                name: 'Investigation (Int)',\n                modifier: getSkillModifier(AbilityType.INT, data.skills.investigation),\n            },\n            medicine: {\n                name: 'Medicine (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.medicine),\n            },\n            nature: {\n                name: 'Nature (Int)',\n                modifier: getSkillModifier(AbilityType.INT, data.skills.nature),\n            },\n            perception: {\n                name: 'Perception (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.perception),\n            },\n            performance: {\n                name: 'Performance (Cha)',\n                modifier: getSkillModifier(AbilityType.CHA, data.skills.performance),\n            },\n            persuasion: {\n                name: 'Persuasion (Cha)',\n                modifier: getSkillModifier(AbilityType.CHA, data.skills.persuasion),\n            },\n            religion: {\n                name: 'Religion (Int)',\n                modifier: getSkillModifier(AbilityType.INT, data.skills.religion),\n            },\n            sleightOfHand: {\n                name: 'Sleight of Hand (Dex)',\n                modifier: getSkillModifier(AbilityType.DEX, data.skills.sleightOfHand),\n            },\n            stealth: {\n                name: 'Stealth (Dex)',\n                modifier: getSkillModifier(AbilityType.DEX, data.skills.stealth),\n            },\n            survival: {\n                name: 'Survival (Wis)',\n                modifier: getSkillModifier(AbilityType.WIS, data.skills.survival),\n            },\n        },\n        attacks: data.attacks.map(attack => ({\n            attackModifier: abilityScores[attack.attackAbility].modifier +\n                attack.attackModifier +\n                (attack.proficient ? data.proficiency : 0),\n            fullDamageRoll: `${attack.damageRoll}+${abilityScores[attack.damageAbility].modifier + attack.damageModifier}`,\n        })),\n        coin: {\n            copper,\n            silver,\n            electrum,\n            gold,\n            platinum,\n        },\n        totalWeight: data.equipment.reduce((val, item) => val + item.weight, 0),\n    };\n});\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script lang=\"ts\">\n  import { fade, scale } from 'svelte/transition'\n  import { quadOut, quadIn } from 'svelte/easing'\n  import { createEventDispatcher } from 'svelte'\n  const dispatch = createEventDispatcher()\n</script>\n\n<div\n  in:fade={{ duration: 200, easing: quadIn }}\n  out:fade={{ duration: 200, easing: quadOut }}\n  class=\"bg-opacity-50 fixed inset-0 z-50 flex overflow-auto items-center justify-center bg-black\"\n  on:click={() => dispatch('close')}\n>\n  <div\n    on:click|stopPropagation\n    in:scale={{ duration: 150, easing: quadIn, delay: 150 }}\n    class=\"p-4 rounded bg-white shadow\"\n  >\n    <slot />\n  </div>\n</div>\n","<script lang=\"ts\">\n  export let value: string | number\n  export let label: string\n  export let type: string = 'text'\n  export let placeholder: string = ''\n\n  let clazz = ''\n  export { clazz as class }\n</script>\n\n<!-- svelte-ignore a11y-label-has-associated-control -->\n<label class=\"{clazz} relative flex border-b border-gray-200\">\n  {#if type === 'number'}\n    <input {placeholder} type=\"number\" class=\"caret-primary-500 pt-6 px-4 pb-2 w-full\" bind:value />\n  {:else if type === 'textarea'}\n    <textarea class=\"caret-primary-500 mt-8 px-4 pb-2 w-full\" bind:value />\n  {:else}\n    <input {placeholder} class=\"caret-primary-500 pt-6 px-4 pb-2 w-full\" bind:value />\n  {/if}\n  <span\n    class:hasValue={value !== undefined && value !== ''}\n    class=\"top-4 left-4 color-gray-600 absolute block text-gray-600 pointer-events-none\">{label}</span\n  >\n  <div class=\"-bottom-0.5 h-0.5 absolute right-0 w-full bg-blue-500\" />\n</label>\n\n<style>\n  span {\n    transition: transform 250ms;\n    transform: scale(1) translateY(0);\n  }\n\n  textarea::placeholder,\n  input::placeholder {\n    opacity: 0;\n    transition: opacity 250ms;\n  }\n\n  textarea:focus::placeholder,\n  input:focus::placeholder {\n    opacity: 1;\n  }\n\n  textarea:focus ~ span,\n  input:focus ~ span,\n  span.hasValue {\n    transform: scale(0.75) translateY(-0.5rem);\n    transform-origin: top left;\n  }\n\n  div {\n    transition: transform 250ms;\n    transform: scaleX(0);\n  }\n\n  textarea:focus ~ div,\n  input:focus ~ div {\n    transform: scaleX(1);\n  }\n</style>\n","<script lang=\"ts\">\n  interface Option {\n    value: any\n    text: string\n  }\n\n  export let items: Array<Option>\n  export let label: string\n  export let value: any\n  let clazz\n  export { clazz as class }\n</script>\n\n<label class=\"{clazz} relative block pt-2 border-b border-gray-200\">\n  <div class=\"ml-2 text-gray-600 text-xs pointer-events-none\">{label}</div>\n  <select class=\"pr-8 pb-2 pl-1 w-full\" bind:value>\n    {#each items as { value, text }}\n      <option {value}>{text}</option>\n    {/each}\n  </select>\n  <div class=\"h-0.5 absolute right-0 bottom w-full bg-blue-500\" />\n  <span class=\"material-icons bottom-2 right-1 absolute text-gray-400\">arrow_drop_down</span>\n</label>\n\n<style>\n  select + div {\n    transition: transform 250ms;\n    transform: scaleX(0);\n  }\n\n  select:focus ~ div {\n    transform: scaleX(1);\n  }\n\n  span {\n    transition: transform 250ms;\n    transform: rotate(0);\n  }\n\n  select:focus:hover ~ span {\n    transform: rotate(180deg);\n  }\n</style>\n","<script lang=\"ts\">\n  export let value: boolean\n  export let label: string\n  export let disabled: boolean = false\n</script>\n\n<label class:opacity-30={disabled} class=\"relative block p-2 border-b border-gray-200\">\n  <input class=\"hidden\" type=\"checkbox\" {disabled} bind:checked={value} />\n  <div class=\"text-gray-600 text-xs pointer-events-none\">{label}</div>\n  <div>\n    {value ? 'Yes' : 'No'}\n  </div>\n</label>\n","<script lang=\"ts\">\n  import { handDrawn } from '../utils'\n\n  let clazz = ''\n  export { clazz as class }\n  export let area: string\n  export let title: string\n  export let label: boolean\n\n  $: style = area !== undefined ? 'grid-area:' + area : undefined\n</script>\n\n{#if label}\n  <!-- svelte-ignore a11y-label-has-associated-control -->\n  <label class=\"{clazz} p-2\" {style} use:handDrawn>\n    <slot />\n    {#if title !== undefined}\n      <div class=\"my-2 text-center uppercase text-xs\">\n        {#each title.split(' ') as word}\n          <span class=\"ml-1 text-sm\">{word[0]}</span>{word.slice(1)}\n        {/each}\n      </div>\n    {/if}\n  </label>\n{:else}\n  <div class=\"{clazz} block p-2\" {style} use:handDrawn>\n    <slot />\n    {#if title !== undefined}\n      <div class=\"my-2 text-center uppercase text-xs\">\n        {#each title.split(' ') as word}\n          <span class=\"ml-1 text-sm\">{word[0]}</span>{word.slice(1)}\n        {/each}\n      </div>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import Dialog from '../components/Dialog.svelte'\n  import TextField from '../components/TextField.svelte'\n  import Select from '../components/Select.svelte'\n  import Checkbox from '../components/Checkbox.svelte'\n  import { data, derived, Attack, AbilityType } from './model'\n  import { enumToSelect } from '../utils'\n  import Container from '../components/Container.svelte'\n\n  let showDialog = false\n\n  let attack: Attack\n\n  function edit(_attack: Attack) {\n    attack = _attack\n    showDialog = true\n  }\n\n  function add() {\n    attack = new Attack()\n    $data.attacks.push(attack)\n    showDialog = true\n  }\n\n  function close() {\n    $data = $data\n    showDialog = false\n  }\n\n  function remove() {\n    $data.attacks.splice($data.attacks.indexOf(attack), 1)\n    close()\n  }\n\n  const items = enumToSelect(AbilityType)\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <TextField label=\"Name\" bind:value={attack.name} />\n    <div class=\"mt-6\">Attack Roll</div>\n    <div class=\"gap-2 flex items-center mb-2\">\n      <Select label=\"Ability\" {items} bind:value={attack.attackAbility} />\n      +\n      <TextField class=\"w-20\" type=\"number\" label=\"Modifier\" bind:value={attack.attackModifier} />\n      +\n      <Checkbox label=\"Proficient\" bind:value={attack.proficient} />\n    </div>\n\n    <div class=\"mt-6\">Damage</div>\n    <div class=\"gap-2 flex items-center mb-2\">\n      <TextField class=\"w-20\" label=\"Dice\" placeholder=\"2d6\" bind:value={attack.damageRoll} />\n      +\n      <Select label=\"Ability\" {items} bind:value={attack.damageAbility} />\n      +\n      <TextField class=\"w-20\" type=\"number\" label=\"Modifier\" bind:value={attack.damageModifier} />\n    </div>\n    <div class=\"gap-2 flex\">\n      <TextField class=\"flex-1 w-0\" label=\"Type\" placeholder=\"Slashing\" bind:value={attack.damageType} />\n      <TextField class=\"flex-1 w-0\" label=\"Range\" bind:value={attack.range} />\n    </div>\n\n    <div class=\"flex justify-between w-full\">\n      <button class=\"py-2 px-4 text-red-400 uppercase font-medium text-sm\" on:click={remove}>Remove</button>\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n\n<Container area=\"atk\">\n  <div class=\"grid gap-2 relative\" title=\"Attacks\">\n    <span>Name</span><span>Atk</span><span>Damage</span><span />\n    {#each $data.attacks as attack, i}\n      <span>{attack.name}</span>\n      <span>{$derived.attacks[i].attackModifier}</span>\n      <span>\n        {$derived.attacks[i].fullDamageRoll}\n        {attack.damageType}\n      </span>\n      <span class=\"material-icons ml-2 text-gray-400 text-sm\" on:click={() => edit(attack)}>edit</span>\n    {/each}\n  </div>\n  <button on:click={add}>+</button>\n</Container>\n\n<style>\n  .grid {\n    grid-template-columns: 1fr auto 1fr auto;\n  }\n</style>\n","<script lang=\"ts\">\n  import { data, Tracker } from './model'\n  import Container from '../components/Container.svelte'\n\n  function add() {\n    data.update(data => {\n      data.trackers.push(new Tracker('Other Resource'))\n      return data\n    })\n  }\n</script>\n\n<div class=\"grid grid-cols-2 gap-3 mb-3\">\n  {#each $data.trackers as tracker}\n    <Container>\n      <div class=\"flex\">\n        Total\n        <input\n          class=\"overflow-hidden flex-1 ml-2 border-b border-gray-200 text-center\"\n          type=\"number\"\n          bind:value={tracker.max}\n        />\n      </div>\n      <input class=\"w-full text-center text-3xl\" type=\"number\" bind:value={tracker.current} />\n      <input class=\"w-full text-center\" bind:value={tracker.name} />\n    </Container>\n  {/each}\n</div>\n<button class=\"mb-3 w-full\" on:click={add}>+</button>\n","<script lang=\"ts\">\n  import Dialog from '../components/Dialog.svelte'\n  import TextField from '../components/TextField.svelte'\n  import Container from '../components/Container.svelte'\n  import { data, Feature } from './model'\n  import type { DnD5eData } from './model'\n\n  let showDialog = false\n\n  let feature: Feature\n\n  function edit(_feature: Feature) {\n    feature = _feature\n    showDialog = true\n  }\n\n  function add() {\n    feature = new Feature()\n    $data.features.push(feature)\n    showDialog = true\n  }\n\n  function close() {\n    $data = $data\n    showDialog = false\n  }\n\n  function remove() {\n    $data.features.splice($data.features.indexOf(feature), 1)\n    close()\n  }\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <TextField label=\"Name\" bind:value={feature.name} />\n    <TextField label=\"Source\" bind:value={feature.source} />\n    <TextField label=\"Description\" type=\"textarea\" class=\"w-96 h-72\" bind:value={feature.description} />\n\n    <div class=\"flex justify-between w-full\" slot=\"actions\">\n      <button class=\"py-2 px-4 text-red-400 uppercase font-medium text-sm\" on:click={remove}>Remove</button>\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n\n<Container class=\"p-4\" title=\"Features & Traits\">\n  {#each $data.features as feature}\n    <label class=\"mb-4\">\n      <div class=\"relative text-lg\">\n        {feature.name}\n        <span\n          class=\"material-icons absolute right-0 text-gray-400 text-sm\"\n          on:click|stopPropagation={() => edit(feature)}>edit</span\n        >\n      </div>\n      <div class=\"text-sm\">{feature.source}</div>\n      <input type=\"checkbox\" />\n      <p class=\"whitespace-pre-wrap\">\n        {feature.description}\n      </p>\n    </label>\n  {/each}\n  <button class=\"w-full\" on:click={add}>+</button>\n</Container>\n\n<style>\n  input[type='checkbox'],\n  input[type='checkbox'] + p {\n    display: none;\n  }\n\n  input[type='checkbox']:checked + p {\n    display: block;\n  }\n</style>\n","<script lang=\"ts\">\n  import Dialog from '../components/Dialog.svelte'\n  import TextField from '../components/TextField.svelte'\n  import Select from '../components/Select.svelte'\n  import Checkbox from '../components/Checkbox.svelte'\n  import Container from '../components/Container.svelte'\n  import { data, derived, Item, ItemType } from './model'\n  import { enumToSelect } from '../utils'\n\n  let showDialog = false\n  let item: Item\n\n  function edit(_item: Item) {\n    item = _item\n    showDialog = true\n  }\n\n  function add() {\n    item = new Item()\n    $data.equipment.push(item)\n    showDialog = true\n  }\n\n  function close() {\n    $data = $data\n    showDialog = false\n  }\n\n  function remove() {\n    $data.equipment.splice($data.equipment.indexOf(item), 1)\n    close()\n  }\n\n  const types = enumToSelect(ItemType)\n\n  let { copper, silver, electrum, gold, platinum } = $derived.coin\n\n  function resetCoin() {\n    copper = $derived.coin.copper\n    silver = $derived.coin.silver\n    electrum = $derived.coin.electrum\n    gold = $derived.coin.gold\n    platinum = $derived.coin.platinum\n  }\n\n  $: $data.coin = copper + silver * 10 + electrum * 50 + gold * 100 + platinum * 1000\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <TextField label=\"name\" bind:value={item.name} />\n    <div class=\"gap-2 flex my-4\">\n      <TextField class=\"w-16\" label=\"Count\" type=\"number\" bind:value={item.count} />\n      <TextField class=\"w-16\" label=\"Weight\" type=\"number\" bind:value={item.weight} />\n      <Select label=\"Type\" items={types} bind:value={item.type} />\n      <Checkbox label=\"Equiped\" disabled={item.type !== ItemType.Equipment} bind:value={item.isEquipped} />\n    </div>\n    <TextField class=\"w-96 h-72\" label=\"description\" type=\"textarea\" bind:value={item.description} />\n\n    <div class=\"flex justify-between w-full\">\n      <button class=\"py-2 px-4 text-red-400 uppercase font-medium text-sm\" on:click={remove}>Remove</button>\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n<Container area=\"inv\" title=\"Equipment\">\n  <div class=\"grid grid-cols-5\">\n    <label>CP <input class=\"w-full\" type=\"number\" bind:value={copper} on:blur={resetCoin} /></label>\n    <label>SP <input class=\"w-full\" type=\"number\" bind:value={silver} on:blur={resetCoin} /></label>\n    <label>EP <input class=\"w-full\" type=\"number\" bind:value={electrum} on:blur={resetCoin} /></label>\n    <label>GP <input class=\"w-full\" type=\"number\" bind:value={gold} on:blur={resetCoin} /></label>\n    <label>PP <input class=\"w-full\" type=\"number\" bind:value={platinum} on:blur={resetCoin} /></label>\n  </div>\n  <div class=\"grid gap-2 items\">\n    <span>Count</span><span>Name</span><span>Weight</span><span />\n    {#each $data.equipment.filter(o => o.type === ItemType.Equipment) as item}\n      <label class:unequiped={!item.isEquipped} class=\"contents\">\n        <span>{item.count}</span>\n        <span>{item.name}</span>\n        <span>\n          {item.weight}\n        </span>\n        <span class=\"material-icons ml-2 text-gray-400 text-sm\" on:click={() => edit(item)}>edit</span>\n        <input class=\"hidden\" type=\"checkbox\" />\n        <span class=\"col-span-3\">{item.description}</span>\n      </label>\n    {/each}\n    {#each $data.equipment.filter(o => o.type === ItemType.Item) as item}\n      <label class=\"contents\">\n        <span>{item.count}</span>\n        <span>{item.name}</span>\n        <span>\n          {item.weight}\n        </span>\n        <span class=\"material-icons ml-2 text-gray-400 text-sm\" on:click={() => edit(item)}>edit</span>\n        <input class=\"hidden\" type=\"checkbox\" />\n        <span class=\"col-span-3\">{item.description}</span>\n      </label>\n    {/each}\n  </div>\n  <button on:click={add}>+</button>\n  <div class=\"text-center\">\n    <div>Total Weight</div>\n    <div class=\"text-2xl\">{$derived.totalWeight}</div>\n  </div>\n</Container>\n\n<style>\n  .items {\n    grid-template-columns: auto 1fr auto auto;\n  }\n\n  .unequiped span {\n    opacity: 0.5;\n  }\n\n  input[type='checkbox'] + span {\n    display: none;\n  }\n\n  input[type='checkbox']:checked + span {\n    display: block;\n  }\n</style>\n","<script lang=\"ts\">\n  import Select from '../components/Select.svelte'\n  import TextField from '../components/TextField.svelte'\n  import Dialog from '../components/Dialog.svelte'\n  import { data, derived, AbilityType, CustomSkill, SkillProficiencyType } from './model'\n  import { enumToSelect } from '../utils'\n  import Container from '../components/Container.svelte'\n\n  let showDialog = false\n  let tool: CustomSkill\n\n  const items = enumToSelect(AbilityType)\n\n  function edit(_tool: CustomSkill) {\n    tool = _tool\n    showDialog = true\n  }\n\n  function add() {\n    tool = new CustomSkill()\n    $data.tools.push(tool)\n    showDialog = true\n  }\n\n  function close() {\n    $data = $data\n    showDialog = false\n  }\n\n  function remove() {\n    $data.tools.splice($data.tools.indexOf(tool), 1)\n    close()\n  }\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <TextField class=\"mb-2\" label=\"Name\" placeholder=\"Thieves' Tools\" bind:value={tool.name} />\n    <div class=\"gap-2 flex mb-2\">\n      <Select\n        class=\"flex-1\"\n        label=\"Proficient\"\n        items={[\n          { value: SkillProficiencyType.None, text: 'None' },\n          { value: SkillProficiencyType.Proficient, text: 'Proficient' },\n          { value: SkillProficiencyType.Expertise, text: 'Expertise' },\n          { value: SkillProficiencyType.JackOfAllTrades, text: 'Jack of All Trades' },\n        ]}\n        bind:value={tool.proficient}\n      />\n      <Select class=\"flex-1\" label=\"Ability\" {items} bind:value={tool.ability} />\n    </div>\n    <TextField class=\"w-96 h-72\" type=\"textarea\" label=\"Description\" bind:value={tool.description} />\n\n    <div class=\"flex justify-between mt-4 w-full\">\n      <button class=\"py-2 px-4 text-red-400 uppercase font-medium text-sm\" on:click={remove}>Remove</button>\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n\n<Container class=\"mb-3 w-full\" title=\"Tool Proficiencies & Custom Skills\">\n  <div class=\"grid gap-2\">\n    <span>Tool</span><span>Pro</span><span>Ability</span><span />\n    {#each $data.tools as tool, key}\n      <label class=\"contents\">\n        <span>{tool.name}</span>\n        <span>{$derived.tools[key].modifier}</span>\n        <span>{$derived.tools[key].ability}</span>\n        <span class=\"material-icons text-gray-400 text-sm\" on:click={() => edit(tool)}>edit</span>\n        <input class=\"hidden\" type=\"checkbox\" />\n        <div class=\"col-span-4\">{tool.description}</div>\n      </label>\n    {/each}\n    <button class=\"col-span-4\" on:click={add}>+</button>\n  </div>\n</Container>\n\n<style>\n  .grid {\n    grid-template-columns: 1fr auto 1fr auto;\n  }\n\n  input[type='checkbox']:checked + div {\n    display: block;\n  }\n\n  input[type='checkbox'] + div {\n    display: none;\n  }\n</style>\n","<script lang=\"ts\">\n  import { data, OtherProficiency, OtherProficiencyType } from './model'\n  import { enumToSelect, handDrawn } from '../utils'\n  import Dialog from '../components/Dialog.svelte'\n  import Select from '../components/Select.svelte'\n  import TextField from '../components/TextField.svelte'\n  import Container from '../components/Container.svelte'\n\n  let showDialog = false\n\n  let proficiency: OtherProficiency\n\n  function edit(_proficiency: OtherProficiency) {\n    proficiency = _proficiency\n    showDialog = true\n  }\n\n  function add() {\n    proficiency = new OtherProficiency()\n    $data.proficiencies.push(proficiency)\n    showDialog = true\n  }\n\n  function close() {\n    $data = $data\n    showDialog = false\n  }\n\n  function remove() {\n    $data.proficiencies.splice($data.proficiencies.indexOf(proficiency), 1)\n    close()\n  }\n\n  const items = enumToSelect(OtherProficiencyType)\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <div class=\"gap-2 flex mb-4\">\n      <Select label=\"Type\" {items} bind:value={proficiency.type} />\n      <TextField label=\"Proficiency\" placeholder=\"Common, Elvish\" bind:value={proficiency.name} />\n      <TextField label=\"Source\" placeholder=\"Race: Elf\" bind:value={proficiency.source} />\n    </div>\n\n    <div class=\"flex justify-between w-full\">\n      <button class=\"py-2 px-4 text-red-400 uppercase font-medium text-sm\" on:click={remove}>Remove</button>\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n\n<Container class=\"w-full\">\n  <div class=\"grid\">\n    <span>Type</span><span>Proficiency</span><span />\n    {#each $data.proficiencies as proficiency}\n      <span>{OtherProficiencyType[proficiency.type]}</span>\n      <span>{proficiency.name}</span>\n      <span class=\"material-icons ml-2 text-gray-400 text-sm\" on:click={() => edit(proficiency)}>edit</span>\n    {/each}\n    <button class=\"col-span-3\" on:click={add}>+</button>\n  </div>\n</Container>\n\n<style>\n  .grid {\n    grid-template-columns: 1fr 1fr auto;\n  }\n</style>\n","<script lang=\"ts\">\n  import Container from '../components/Container.svelte'\n\n  import Dialog from '../components/Dialog.svelte'\n  import { data, derived, SkillProficiencyType } from './model'\n\n  let showDialog = false\n\n  function close() {\n    showDialog = false\n  }\n</script>\n\n{#if showDialog}\n  <Dialog on:close={close}>\n    <div class=\"dialog grid gap-4 items-center\">\n      <span>Skill</span><span>Proficieny</span><span>Skill</span><span>Proficieny</span>\n      {#each Object.entries($derived.skills) as [key, value]}\n        <span>{value.name}</span>\n        <select bind:value={$data.skills[key]}>\n          <option value={SkillProficiencyType.None}>None</option>\n          <option value={SkillProficiencyType.Proficient}>Proficient</option>\n          <option value={SkillProficiencyType.Expertise}>Experties</option>\n          <option value={SkillProficiencyType.JackOfAllTrades}>Jack of All Trades</option>\n        </select>\n      {/each}\n    </div>\n\n    <div class=\"flex justify-end mt-4 w-full\">\n      <button class=\"text-primary-400 py-2 px-4 uppercase font-medium text-sm\" on:click={close}>Done</button>\n    </div>\n  </Dialog>\n{/if}\n\n<Container class=\"skills mb-3 pt-6 px-6\" title=\"Skills\">\n  <div class=\"skills grid gap-x-2 items-center\">\n    <span class=\"col-span-3 material-icons text-gray-400 text-right text-sm\" on:click={() => (showDialog = true)}>\n      edit\n    </span>\n    {#each Object.entries($derived.skills) as [key, value]}\n      <span class=\"material-icons text-right text-sm\">\n        {$data.skills[key] == SkillProficiencyType.Proficient\n          ? 'check_box'\n          : $data.skills[key] == SkillProficiencyType.Expertise\n          ? 'check_boxcheck_box'\n          : $data.skills[key] == SkillProficiencyType.JackOfAllTrades\n          ? 'indeterminate_check_box'\n          : 'check_box_outline_blank'}\n      </span>\n      <span>{value.modifier}</span>\n      <span>{value.name}</span>\n    {/each}\n  </div>\n</Container>\n\n<style>\n  .dialog {\n    grid-template-columns: auto 1fr auto 1fr;\n  }\n\n  .skills {\n    grid-template-columns: auto auto 1fr;\n  }\n</style>\n","<script>\n  import { range } from '../utils'\n  import { AbilityType, CustomSkill, data, derived, DiceType } from './model'\n  import Attacks from './Attacks.svelte'\n  import Trackers from './Trackers.svelte'\n  import Features from './Features.svelte'\n  import Equipment from './Equipment.svelte'\n  import Tools from './Tools.svelte'\n  import OtherProficiencies from './OtherProficiencies.svelte'\n  import Skills from './Skills.svelte'\n  import Container from '../components/Container.svelte'\n\n  $: console.log($data)\n</script>\n\n<div class=\"flex items-center mb-3\">\n  <label class=\"p-4 w-1/3 border-t border-b border-gray-200 border-l\">\n    <input bind:value={$data.name} class=\"w-full\" />\n    Character Name\n  </label>\n  <Container class=\"flex flex-wrap p-4 w-2/3\">\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class=\"w-1/3\">\n      <div class=\"w-full border-b border-gray-200\">\n        <input bind:value={$data.playerClass} />\n        <select bind:value={$data.level}>\n          {#each range(1, 21) as n}\n            <option value={n}>{n}</option>\n          {/each}\n        </select>\n      </div>\n      Class & Level\n    </label>\n    <label class=\"w-2/3\">\n      <input bind:value={$data.background} class=\"w-full border-b border-gray-200\" />\n      Background\n    </label>\n    <label class=\"w-1/3\">\n      <input bind:value={$data.race} class=\"w-full border-b border-gray-200\" />\n      Race\n    </label>\n    <label class=\"w-1/3\">\n      <input bind:value={$data.alignment} class=\"w-full border-b border-gray-200\" />\n      Alignment\n    </label>\n    <label class=\"w-1/3\">\n      <input bind:value={$data.exp} class=\"w-full border-b border-gray-200\" />\n      Experience Points\n    </label>\n  </Container>\n</div>\n<div class=\"grid grid-cols-3 gap-3\">\n  <div class=\"flex flex-wrap\">\n    <div class=\"pr-1.5 w-1/3\">\n      {#each Object.entries($derived.abilityScores) as [type, ability]}\n        <Container class=\"mb-6\">\n          <label class=\"flex items-center flex-col\">\n            <span>{ability.name}</span>\n            <span class=\"text-5xl\">{ability.modifier}</span>\n            <input\n              class=\"-bottom-2 relative w-12 border border-gray-200 bg-white text-center text-2xl\"\n              type=\"number\"\n              bind:value={$data.abilityScores[type]}\n            />\n          </label>\n        </Container>\n      {/each}\n    </div>\n\n    <div class=\"pl-1.5 w-2/3\">\n      <Container class=\"mb-3\">\n        <label class=\"flex px-4\">\n          <input type=\"checkbox\" bind:checked={$data.inspiration} />\n          <span class=\"flex-grow text-center\">Inspiration</span>\n        </label>\n      </Container>\n\n      <Container class=\"mb-3\">\n        <label class=\"flex px-4\">\n          <input class=\"w-6 text-center\" type=\"number\" bind:value={$data.proficiency} />\n          <span class=\"flex-grow text-center\">Proficiency Bonus</span>\n        </label>\n      </Container>\n\n      <Container class=\"flex flex-col mb-3 pt-6 px-6\" title=\"Saving Throws\">\n        {#each Object.entries($derived.savingThrows) as [type, value]}\n          <label class=\"flex\">\n            <input class=\"mr-4\" type=\"checkbox\" bind:checked={$data.savingThrows[type]} />\n            <span class=\"mr-4\">{value.modifier}</span>\n            {value.name}\n          </label>\n        {/each}\n      </Container>\n\n      <Skills />\n    </div>\n\n    <Container class=\"flex mb-3 px-4 w-full\">\n      <span class=\"w-12\">{10 + $derived.skills.perception.modifier}</span>\n      <span class=\"flex-grow text-center\">passive wisdom (perception)</span>\n    </Container>\n\n    <Tools />\n    <OtherProficiencies />\n  </div>\n  <div class=\"second\">\n    <Container area=\"ac\" title=\"Armor Class\" label>\n      <input class=\"w-full text-center text-5xl\" type=\"number\" bind:value={$data.armorClass} />\n    </Container>\n    <Container class=\"py-2 text-center\" area=\"in\" title=\"Initiative\">\n      <div class=\"w-full text-5xl\">{$derived.abilityScores[AbilityType.DEX].modifier}</div>\n    </Container>\n    <Container area=\"speed\" title=\"Speed\" label>\n      <input class=\"w-full text-center text-5xl\" type=\"number\" bind:value={$data.speed} />\n    </Container>\n\n    <Container class=\"flex flex-col w-full text-center\" area=\"hp\">\n      <label class=\"flex w-full\">\n        Hit Point Maximum\n        <input class=\"flex-grow ml-2 border-b border-gray-200 text-center\" type=\"number\" bind:value={$data.hp.max} />\n      </label>\n      <label>\n        <input class=\"w-full text-center text-5xl\" type=\"number\" bind:value={$data.hp.current} />\n        Current Hit Points\n      </label>\n    </Container>\n\n    <Container area=\"tmp\" title=\"Temporary Hit Points\" label>\n      <input class=\"w-full text-center text-5xl\" type=\"number\" bind:value={$data.hp.temp} />\n    </Container>\n\n    <Container class=\"overflow-hidden text-center\" area=\"hit\">\n      <label class=\"flex\">\n        Total\n        <input\n          class=\"overflow-hidden flex-1 ml-2 border-b border-gray-200 text-center\"\n          type=\"number\"\n          bind:value={$data.hitDice.max}\n        />\n      </label>\n      <input class=\"w-full text-center text-2xl\" type=\"number\" bind:value={$data.hitDice.current} />\n      Hit Dice (<select class=\"w-7\" bind:value={$data.hitDice.type}>\n        {#each Object.entries(DiceType).filter(o => typeof o[1] === 'number') as [label, value]}\n          <option {value}>{label}</option>\n        {/each}\n      </select>)\n    </Container>\n    <Container class=\"flex overflow-hidden flex-col justify-around px-2\" area=\"ds\" title=\"Death Saves\">\n      <div class=\"flex\" on:click={e => ($data.deathSaves.success = ($data.deathSaves.success + 1) % 4)}>\n        <span class=\"w-1/2\">Success</span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.success >= 1 ? 'check_box' : 'check_box_outline_blank'}\n        </span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.success >= 2 ? 'check_box' : 'check_box_outline_blank'}\n        </span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.success >= 3 ? 'check_box' : 'check_box_outline_blank'}\n        </span>\n      </div>\n      <div class=\"flex\" on:click={e => ($data.deathSaves.failure = ($data.deathSaves.failure + 1) % 4)}>\n        <span class=\"w-1/2\">Failure</span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.failure >= 1 ? 'disabled_by_default' : 'check_box_outline_blank'}\n        </span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.failure >= 2 ? 'disabled_by_default' : 'check_box_outline_blank'}\n        </span>\n        <span class=\"material-icons pointer-events-none\">\n          {$data.deathSaves.failure >= 3 ? 'disabled_by_default' : 'check_box_outline_blank'}\n        </span>\n      </div>\n    </Container>\n\n    <Attacks />\n    <Equipment />\n  </div>\n  <div>\n    <Container class=\"mb-3\" tilte=\"Personality Traits\">\n      <textarea class=\"w-full\" bind:value={$data.traits} />\n    </Container>\n    <Container class=\"mb-3\" tilte=\"Ideals\">\n      <textarea class=\"w-full\" bind:value={$data.ideals} />\n    </Container>\n    <Container class=\"mb-3\" tilte=\"Bonds\">\n      <textarea class=\"w-full\" bind:value={$data.bonds} />\n    </Container>\n    <Container class=\"mb-3\" tilte=\"Flaws\">\n      <textarea class=\"w-full\" bind:value={$data.flaws} />\n    </Container>\n    <Trackers />\n    <Features />\n  </div>\n</div>\n\n<style>\n  .second {\n    @apply grid gap-3;\n    justify-content: start;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(6, max-content);\n    grid-template-areas:\n      'ac ac in in speed speed'\n      'hp hp hp hp hp hp'\n      'tmp tmp tmp tmp tmp tmp'\n      'hit hit hit ds ds ds'\n      'atk atk atk atk atk atk'\n      'inv inv inv inv inv inv';\n  }\n</style>\n","import App from './App.svelte';\nconst app = new App({ target: document.body });\nexport default app;\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","value","set","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","createEventDispatcher","Error","get_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","bind","index","props","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","splice","$$props","obj","$$set","keys","range","to","_","mapObject","fromEntries","entries","key","val","enumToSelect","resizeObserver","ResizeObserver","entry","backgroundImage","box","clientWidth","clientHeight","handDrawn","observe","unobserve","width","height","r1","random","r2","path","maxX","strokeWidth","maxY","min","toFixed","y","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","_a","DiceType","AbilityType","SkillProficiencyType","ItemType","OtherProficiencyType","Attack","attackAbility","STR","attackModifier","proficient","damageRoll","damageAbility","damageModifier","damageType","Item","description","count","weight","isEquipped","CustomSkill","Proficient","ability","modifier","OtherProficiency","Language","source","Feature","Tracker","current","JSON","parse","localStorage","getItem","playerClass","level","background","race","alignment","exp","abilityScores","DEX","CON","INT","WIS","CHA","tools","proficiencies","inspiration","proficiency","savingThrows","skills","acrobatics","None","animalHandling","arcana","athletics","deception","history","insight","intimidation","investigation","medicine","nature","perception","persuasion","religion","sleightOfHand","stealth","survival","armorClass","speed","hp","temp","hitDice","D6","deathSaves","success","failure","attacks","equipment","coin","traits","ideals","bonds","flaws","trackers","features","timer","args","clearTimeout","setTimeout","debounce","setItem","stringify","abilityNames","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","sync","result","unsubscribers","derivedStore","base","floor","getSkillModifier","Expertise","JackOfAllTrades","copper","platinum","gold","electrum","silver","tool","attack","fullDamageRoll","totalWeight","reduce","item","cubicOut","quadIn","quadOut","fade","linear","getComputedStyle","opacity","scale","target_opacity","transform","sd","od","_t","u","group","reset","label","placeholder","clazz","items","disabled","area","title","showDialog","edit","_attack","close","$data","feature","_feature","Equipment","_item","types","$derived","_tool","_proficiency","console","log","body"],"mappings":"gCAAA,SAASA,KACT,MAAMC,EAAWC,GAAKA,EAetB,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAahF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOjB,EAEX,MAAMmB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IAElD,SAASI,EAAYC,EAAYC,EAAKC,EAAS1B,GAC3C,GAAIwB,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAC5D,OAAOwB,EAAW,GAAGG,IAG7B,SAASC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAChD,OAAOwB,EAAW,IAAMxB,EA9D5B,SAAgB6B,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EA2DDG,CAAON,EAAQD,IAAIQ,QAAST,EAAW,GAAGxB,EAAGyB,KAC7CC,EAAQD,IAoBlB,SAASS,EAAYC,EAAMC,EAAiBX,EAAKC,EAASW,EAAOC,EAAqBC,GAClF,MAAMC,EAnBV,SAA0BhB,EAAYE,EAASW,EAAOrC,GAClD,GAAIwB,EAAW,IAAMxB,EAAI,CACrB,MAAMyC,EAAOjB,EAAW,GAAGxB,EAAGqC,IAC9B,QAAsBK,IAAlBhB,EAAQW,MACR,OAAOI,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIpB,EAAQW,MAAMU,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKtB,EAAQW,MAAMW,GAAKP,EAAKO,GAExC,OAAOL,EAEX,OAAOjB,EAAQW,MAAQI,EAE3B,OAAOf,EAAQW,MAGMY,CAAiBb,EAAiBV,EAASW,EAAOC,GACvE,GAAIE,EAAc,CACd,MAAMU,EAAetB,EAAiBQ,EAAiBX,EAAKC,EAASa,GACrEJ,EAAKgB,EAAED,EAAcV,IA4C7B,SAASY,EAAgBvC,EAAOwC,EAAKC,EAAQD,GAEzC,OADAxC,EAAM0C,IAAID,GACHD,EAGX,SAASG,EAAiBC,GACtB,OAAOA,GAAiBlD,EAAYkD,EAAcC,SAAWD,EAAcC,QAAU9D,EAGzF,MAAM+D,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMrE,EASxD,MAAMuE,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAM7D,SAAQgE,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,QAGM,IAAfN,EAAMO,MACNV,EAAIK,GAYZ,SAASM,EAAKxD,GACV,IAAImD,EAGJ,OAFmB,IAAfH,EAAMO,MACNV,EAAIK,GACD,CACHO,QAAS,IAAIC,SAAQC,IACjBX,EAAMY,IAAIT,EAAO,CAAEC,EAAGpD,EAAUsD,EAAGK,OAEvCE,QACIb,EAAMK,OAAOF,KAKzB,SAASW,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAI7C,EAAI,EAAGA,EAAI4C,EAAW7C,OAAQC,GAAK,EACpC4C,EAAW5C,IACX4C,EAAW5C,GAAG8C,EAAED,GAG5B,SAASE,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOrB,EAAMsB,EAAOC,EAASC,GAElC,OADAxB,EAAKyB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMxB,EAAK0B,oBAAoBJ,EAAOC,EAASC,GAS1D,SAASG,EAAiB9G,GACtB,OAAO,SAAUyG,GAGb,OAFAA,EAAMM,kBAEC/G,EAAGgH,KAAKC,KAAMR,IAU7B,SAASS,EAAK/B,EAAMgC,EAAW7D,GACd,MAATA,EACA6B,EAAKiC,gBAAgBD,GAChBhC,EAAKkC,aAAaF,KAAe7D,GACtC6B,EAAKmC,aAAaH,EAAW7D,GAkDrC,SAASiE,EAAUjE,GACf,MAAiB,KAAVA,EAAe,MAAQA,EA6ClC,SAASkE,EAASrB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKsB,YAAcrB,IACnBD,EAAKC,KAAOA,GAEpB,SAASsB,EAAgBC,EAAOrE,GAC5BqE,EAAMrE,MAAiB,MAATA,EAAgB,GAAKA,EAavC,SAASsE,EAAcC,EAAQvE,GAC3B,IAAK,IAAIN,EAAI,EAAGA,EAAI6E,EAAOlB,QAAQ5D,OAAQC,GAAK,EAAG,CAC/C,MAAM8E,EAASD,EAAOlB,QAAQ3D,GAC9B,GAAI8E,EAAOC,UAAYzE,EAEnB,YADAwE,EAAOE,UAAW,IAW9B,SAASC,EAAaJ,GAClB,MAAMK,EAAkBL,EAAOM,cAAc,aAAeN,EAAOlB,QAAQ,GAC3E,OAAOuB,GAAmBA,EAAgBH,QA0D9C,SAASK,EAAarC,EAASC,EAAMqC,GACjCtC,EAAQuC,UAAUD,EAAS,MAAQ,UAAUrC,GAEjD,SAASuC,EAAaC,EAAMC,GACxB,MAAMC,EAAIzC,SAAS0C,YAAY,eAE/B,OADAD,EAAEE,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BC,EAmDX,MAAMG,EAAc,IAAIzE,IACxB,IAiII0E,EAjIAC,EAAS,EASb,SAASC,EAAY7D,EAAMzE,EAAGC,EAAGsI,EAAUC,EAAOC,EAAMnJ,EAAIoJ,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAInG,EAAI,EAAGA,GAAK,EAAGA,GAAKkG,EAAM,CAC/B,MAAME,EAAI7I,GAAKC,EAAID,GAAKyI,EAAKhG,GAC7BmG,GAAiB,IAAJnG,EAAU,KAAKnD,EAAGuJ,EAAG,EAAIA,QAE1C,MAAMC,EAAOF,EAAY,SAAStJ,EAAGW,EAAG,EAAIA,SACtCqF,EAAO,YAfjB,SAAcyD,GACV,IAAIC,EAAO,KACP1G,EAAIyG,EAAI1G,OACZ,KAAOC,KACH0G,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAW3G,GACjD,OAAO0G,IAAS,EAUSA,CAAKF,MAASJ,IACjCQ,EAAMzE,EAAK0E,cACjBhB,EAAY9D,IAAI6E,GAChB,MAAME,EAAaF,EAAIG,sBAAwBH,EAAIG,oBAAsBH,EAAII,KAAK5E,YAAYW,EAAQ,UAAUkE,OAC1GC,EAAgBN,EAAIO,iBAAmBP,EAAIO,eAAiB,IAC7DD,EAAclE,KACfkE,EAAclE,IAAQ,EACtB8D,EAAWM,WAAW,cAAcpE,KAAQwD,IAAQM,EAAWO,SAAStH,SAE5E,MAAMuH,EAAYnF,EAAKoF,MAAMD,WAAa,GAG1C,OAFAnF,EAAKoF,MAAMD,UAAY,GAAGA,EAAY,GAAGA,MAAgB,KAAKtE,KAAQiD,cAAqBC,aAC3FH,GAAU,EACH/C,EAEX,SAASwE,EAAYrF,EAAMa,GACvB,MAAMyE,GAAYtF,EAAKoF,MAAMD,WAAa,IAAII,MAAM,MAC9CC,EAAOF,EAASG,OAAO5E,EACvB6E,GAAQA,EAAKC,QAAQ9E,GAAQ,EAC7B6E,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAAS1H,OAAS4H,EAAK5H,OACnCgI,IACA5F,EAAKoF,MAAMD,UAAYK,EAAKK,KAAK,MACjCjC,GAAUgC,EACLhC,GAKT/E,GAAI,KACI+E,IAEJF,EAAYvI,SAAQsJ,IAChB,MAAME,EAAaF,EAAIG,oBACvB,IAAI/G,EAAI8G,EAAWO,SAAStH,OAC5B,KAAOC,KACH8G,EAAWmB,WAAWjI,GAC1B4G,EAAIO,eAAiB,MAEzBtB,EAAYqC,aA0EpB,SAASC,EAAsBjK,GAC3B4H,EAAoB5H,EAmBxB,SAASkK,IACL,MAAMlK,EAlBV,WACI,IAAK4H,EACD,MAAM,IAAIuC,MAAM,oDACpB,OAAOvC,EAeWwC,GAClB,MAAO,CAAC9C,EAAMC,KACV,MAAM3H,EAAYI,EAAUE,GAAGN,UAAU0H,GACzC,GAAI1H,EAAW,CAGX,MAAM2F,EAAQ8B,EAAaC,EAAMC,GACjC3H,EAAUmB,QAAQ3B,SAAQN,IACtBA,EAAGgH,KAAK9F,EAAWuF,QAwBnC,MAAM8E,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmB9G,QAAQ+G,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB9L,GACzByL,EAAiBnK,KAAKtB,GAE1B,SAAS+L,EAAmB/L,GACxB0L,EAAgBpK,KAAKtB,GAEzB,IAAIgM,GAAW,EACf,MAAMC,GAAiB,IAAI7H,IAC3B,SAAS8H,KACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIhJ,EAAI,EAAGA,EAAIuI,EAAiBxI,OAAQC,GAAK,EAAG,CACjD,MAAM9B,EAAYqK,EAAiBvI,GACnCmI,EAAsBjK,GACtBiL,GAAOjL,EAAUE,IAIrB,IAFA+J,EAAsB,MACtBI,EAAiBxI,OAAS,EACnByI,EAAkBzI,QACrByI,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAIxI,EAAI,EAAGA,EAAIyI,EAAiB1I,OAAQC,GAAK,EAAG,CACjD,MAAM7B,EAAWsK,EAAiBzI,GAC7BiJ,GAAeI,IAAIlL,KAEpB8K,GAAelH,IAAI5D,GACnBA,KAGRsK,EAAiB1I,OAAS,QACrBwI,EAAiBxI,QAC1B,KAAO2I,EAAgB3I,QACnB2I,EAAgBU,KAAhBV,GAEJG,GAAmB,EACnBG,GAAW,EACXC,GAAef,SAEnB,SAASiB,GAAO/K,GACZ,GAAoB,OAAhBA,EAAGkL,SAAmB,CACtBlL,EAAG+K,SACH/L,EAAQgB,EAAGmL,eACX,MAAMlK,EAAQjB,EAAGiB,MACjBjB,EAAGiB,MAAQ,EAAE,GACbjB,EAAGkL,UAAYlL,EAAGkL,SAASnJ,EAAE/B,EAAGK,IAAKY,GACrCjB,EAAGoL,aAAalM,QAAQwL,IAIhC,IAAIlH,GACJ,SAAS6H,KAOL,OANK7H,KACDA,GAAUC,QAAQ+G,UAClBhH,GAAQ8H,MAAK,KACT9H,GAAU,SAGXA,GAEX,SAAS+H,GAASxH,EAAMyH,EAAWC,GAC/B1H,EAAK2H,cAAcvE,EAAa,GAAGqE,EAAY,QAAU,UAAUC,MAEvE,MAAME,GAAW,IAAI3I,IACrB,IAAI4I,GACJ,SAASC,KACLD,GAAS,CACLE,EAAG,EACH3I,EAAG,GACHpB,EAAG6J,IAGX,SAASG,KACAH,GAAOE,GACR9M,EAAQ4M,GAAOzI,GAEnByI,GAASA,GAAO7J,EAEpB,SAASiK,GAAcC,EAAOC,GACtBD,GAASA,EAAMrK,IACf+J,GAASvI,OAAO6I,GAChBA,EAAMrK,EAAEsK,IAGhB,SAASC,GAAeF,EAAOC,EAAO9H,EAAQrE,GAC1C,GAAIkM,GAASA,EAAMG,EAAG,CAClB,GAAIT,GAASV,IAAIgB,GACb,OACJN,GAAShI,IAAIsI,GACbL,GAAOzI,EAAEjD,MAAK,KACVyL,GAASvI,OAAO6I,GACZlM,IACIqE,GACA6H,EAAMvH,EAAE,GACZ3E,QAGRkM,EAAMG,EAAEF,IAGhB,MAAMG,GAAkB,CAAExE,SAAU,GACpC,SAASyE,GAAqBvI,EAAMnF,EAAI2N,GACpC,IAEIC,EACAtJ,EAHAuJ,EAAS7N,EAAGmF,EAAMwI,GAClBG,GAAU,EAGV1E,EAAM,EACV,SAAS2E,IACDH,GACApD,EAAYrF,EAAMyI,GAE1B,SAASI,IACL,MAAM9E,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGgF,OAAEA,EAASpO,EAAQqO,KAAEA,EAAOtO,EAAIuO,IAAEA,GAAQN,GAAUJ,GACjFU,IACAP,EAAiB5E,EAAY7D,EAAM,EAAG,EAAG8D,EAAUC,EAAO+E,EAAQE,EAAK/E,MAC3E8E,EAAK,EAAG,GACR,MAAME,EAAavK,IAAQqF,EACrBmF,EAAWD,EAAanF,EAC1B3E,GACAA,EAAKgK,QACTR,GAAU,EACVhC,GAAoB,IAAMa,GAASxH,GAAM,EAAM,WAC/Cb,EAAOK,GAAKd,IACR,GAAIiK,EAAS,CACT,GAAIjK,GAAOwK,EAIP,OAHAH,EAAK,EAAG,GACRvB,GAASxH,GAAM,EAAM,OACrB4I,IACOD,GAAU,EAErB,GAAIjK,GAAOuK,EAAY,CACnB,MAAM7E,EAAI0E,GAAQpK,EAAMuK,GAAcnF,GACtCiF,EAAK3E,EAAG,EAAIA,IAGpB,OAAOuE,KAGf,IAAIS,GAAU,EACd,MAAO,CACHvJ,QACQuJ,IAEJ/D,EAAYrF,GACR5E,EAAYsN,IACZA,EAASA,IACTpB,KAAOC,KAAKsB,IAGZA,MAGRhJ,aACIuJ,GAAU,GAEdvJ,MACQ8I,IACAC,IACAD,GAAU,KAmhB1B,SAASU,GAAKtN,EAAW8E,EAAM7E,GAC3B,MAAMsN,EAAQvN,EAAUE,GAAGsN,MAAM1I,QACnBtD,IAAV+L,IACAvN,EAAUE,GAAGuN,MAAMF,GAAStN,EAC5BA,EAASD,EAAUE,GAAGK,IAAIgN,KAGlC,SAASG,GAAiBvB,GACtBA,GAASA,EAAM9I,IAKnB,SAASsK,GAAgB3N,EAAWgE,EAAQI,EAAQwJ,GAChD,MAAMxC,SAAEA,EAAQyC,SAAEA,EAAQ1N,WAAEA,EAAUmL,aAAEA,GAAiBtL,EAAUE,GACnEkL,GAAYA,EAAS0C,EAAE9J,EAAQI,GAC1BwJ,GAEDhD,GAAoB,KAChB,MAAMmD,EAAiBF,EAASG,IAAInP,GAAK6K,OAAOrK,GAC5Cc,EACAA,EAAWC,QAAQ2N,GAKnB7O,EAAQ6O,GAEZ/N,EAAUE,GAAG2N,SAAW,MAGhCvC,EAAalM,QAAQwL,GAEzB,SAASqD,GAAkBjO,EAAW2E,GAClC,MAAMzE,EAAKF,EAAUE,GACD,OAAhBA,EAAGkL,WACHlM,EAAQgB,EAAGC,YACXD,EAAGkL,UAAYlL,EAAGkL,SAASxG,EAAED,GAG7BzE,EAAGC,WAAaD,EAAGkL,SAAW,KAC9BlL,EAAGK,IAAM,IAGjB,SAAS2N,GAAWlO,EAAW8B,IACI,IAA3B9B,EAAUE,GAAGiB,MAAM,KACnBkJ,EAAiBjK,KAAKJ,GA7uBrB2K,IACDA,GAAmB,EACnBF,EAAiBe,KAAKR,KA6uBtBhL,EAAUE,GAAGiB,MAAMgN,KAAK,IAE5BnO,EAAUE,GAAGiB,MAAOW,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASsM,GAAKpO,EAAWyF,EAAS4I,EAAUC,EAAiBC,EAAWf,EAAOrM,EAAQ,EAAE,IACrF,MAAMqN,EAAmB5G,EACzBqC,EAAsBjK,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtBkL,SAAU,KACV7K,IAAK,KAELiN,MAAAA,EACAvC,OAAQvM,EACR6P,UAAAA,EACAd,MAAO1O,IAEP8O,SAAU,GACV1N,WAAY,GACZsO,cAAe,GACfpD,cAAe,GACfC,aAAc,GACdoD,QAAS,IAAIC,IAAIH,EAAmBA,EAAiBtO,GAAGwO,QAAUjJ,EAAQiJ,SAAW,IAErF9O,UAAWb,IACXoC,MAAAA,EACAyN,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBA3O,EAAGK,IAAM8N,EACHA,EAASrO,EAAWyF,EAAQ+H,OAAS,IAAI,CAAC1L,EAAGK,KAAQ2M,KACnD,MAAM1M,EAAQ0M,EAAKjN,OAASiN,EAAK,GAAK3M,EAOtC,OANIjC,EAAGK,KAAOgO,EAAUrO,EAAGK,IAAIuB,GAAI5B,EAAGK,IAAIuB,GAAKM,MACtClC,EAAG0O,YAAc1O,EAAGuN,MAAM3L,IAC3B5B,EAAGuN,MAAM3L,GAAGM,GACZyM,GACAX,GAAWlO,EAAW8B,IAEvBK,KAET,GACNjC,EAAG+K,SACH4D,GAAQ,EACR3P,EAAQgB,EAAGmL,eAEXnL,EAAGkL,WAAWkD,GAAkBA,EAAgBpO,EAAGK,KAC/CkF,EAAQzB,OAAQ,CAChB,GAAIyB,EAAQsJ,QAAS,CACjB,MAAMC,EAzpClB,SAAkBnK,GACd,OAAOoK,MAAMC,KAAKrK,EAAQsK,YAwpCJC,CAAS3J,EAAQzB,QAE/B9D,EAAGkL,UAAYlL,EAAGkL,SAASiE,EAAEL,GAC7BA,EAAM5P,QAAQkF,QAIdpE,EAAGkL,UAAYlL,EAAGkL,SAAS/H,IAE3BoC,EAAQ6J,OACRpD,GAAclM,EAAUE,GAAGkL,UAC/BuC,GAAgB3N,EAAWyF,EAAQzB,OAAQyB,EAAQrB,OAAQqB,EAAQmI,eACnE5C,KAEJf,EAAsBuE,GAkD1B,MAAMe,GACFzL,WACImK,GAAkBlI,KAAM,GACxBA,KAAKyJ,SAAW9Q,EAEpBoF,IAAIwD,EAAMrH,GACN,MAAML,EAAamG,KAAK7F,GAAGN,UAAU0H,KAAUvB,KAAK7F,GAAGN,UAAU0H,GAAQ,IAEzE,OADA1H,EAAUQ,KAAKH,GACR,KACH,MAAMsN,EAAQ3N,EAAUgK,QAAQ3J,IACjB,IAAXsN,GACA3N,EAAU6P,OAAOlC,EAAO,IAGpCzJ,KAAK4L,GA1gDT,IAAkBC,EA2gDN5J,KAAK6J,QA3gDCD,EA2gDkBD,EA1gDG,IAA5B1Q,OAAO6Q,KAAKF,GAAK9N,UA2gDhBkE,KAAK7F,GAAG0O,YAAa,EACrB7I,KAAK6J,MAAMF,GACX3J,KAAK7F,GAAG0O,YAAa,IChjD1B,SAASkB,GAAMZ,EAAO,EAAGa,GAK5B,YAJWvO,IAAPuO,IACAA,EAAKb,EACLA,EAAO,GAEJD,MAAMC,KAAK,CAAErN,OAAQkO,EAAKb,IAAQ,CAACc,EAAGlO,IAAMA,EAAIoN,IASpD,SAASe,GAAUN,EAAK7Q,GAC3B,OAAOE,OAAOkR,YAAYlR,OAAOmR,QAAQR,GAAK3B,KAAI,EAAEoC,EAAKC,KAAS,CAACD,EAAKtR,EAAGuR,EAAKD,OAE7E,SAASE,GAAaX,GACzB,OAAO3Q,OAAOmR,QAAQR,GACjBjG,QAAO4C,GAAqB,iBAATA,EAAE,KACrB0B,KAAI,EAAE/I,EAAM7C,OAAcA,MAAAA,EAAO6C,KAAAA,MAE1C,MAAMsL,GAAiB,IAAIC,gBAAeL,IACtC,IAAK,MAAMM,KAASN,EAAS,CACzB,MAAMlM,EAAOwM,EAAMzM,OACnBC,EAAKoF,MAAMqH,gBAAkBC,GAAI1M,EAAK2M,YAAa3M,EAAK4M,kBAGzD,SAASC,GAAU7M,GAEtB,OADAsM,GAAeQ,QAAQ9M,GAChB,CACHH,UACIyM,GAAeS,UAAU/M,KAIrC,SAAS0M,GAAIM,EAAOC,GAChB,MAEMC,EAAK,IAAsB,GAAhBxP,KAAKyP,SAAgB,GAChCC,EAAK,IAAsB,EAAhB1P,KAAKyP,SACtB,IAAIE,EAAO,KAAKD,OAAQA,MACpBE,EAAON,EAAQO,EACfC,EAAOP,EAASM,EACpB,IAAK,IAAI5S,EAAI,EAAGA,EAAI2S,EAAM3S,GAAKuS,IAC3BG,GAAQ,MAAM3P,KAAK+P,IAAI9S,EAAG2S,GAAMI,QAAQ,MAAMN,IAAKM,QAAQ,KAC/D,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMG,GAAKT,IAC3BG,GAAQ,OAAOC,EAAOF,KAAMM,QAAQ,MAAMhQ,KAAK+P,IAAIE,EAAGH,GAAME,QAAQ,KACxE,IAAK,IAAI/S,EAAI2S,EAAM3S,EAAI,EAAGA,GAAKuS,IAC3BG,GAAQ,MAAM3P,KAAKC,IAAIhD,EAAG,GAAG+S,QAAQ,OAAOF,EAAOJ,KAAMM,QAAQ,KACrE,IAAK,IAAIC,EAAIH,EAAMG,EAAI,EAAGA,GAAKT,IAC3BG,GAAQ,MAAMD,IAAKM,QAAQ,MAAMhQ,KAAKC,IAAIgQ,EAAG,GAAGD,QAAQ,KAE5D,OADAL,GAAQ,KACD,kDAAkDL,KAASC,kDAAuDI,+DClD7H,MAAMO,GAAmB,GAgBzB,SAASC,GAAS1P,EAAO2P,EAAQrT,GAC7B,IAAIsT,EACJ,MAAMC,EAAc,GACpB,SAAS5P,EAAI6P,GACT,GAAI3S,EAAe6C,EAAO8P,KACtB9P,EAAQ8P,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBhQ,OACpC,IAAK,IAAIC,EAAI,EAAGA,EAAImQ,EAAYpQ,OAAQC,GAAK,EAAG,CAC5C,MAAMsQ,EAAIH,EAAYnQ,GACtBsQ,EAAE,KACFP,GAAiBzR,KAAKgS,EAAGhQ,GAE7B,GAAI+P,EAAW,CACX,IAAK,IAAIrQ,EAAI,EAAGA,EAAI+P,GAAiBhQ,OAAQC,GAAK,EAC9C+P,GAAiB/P,GAAG,GAAG+P,GAAiB/P,EAAI,IAEhD+P,GAAiBhQ,OAAS,IA0B1C,MAAO,CAAEQ,IAAAA,EAAK4I,OArBd,SAAgBnM,GACZuD,EAAIvD,EAAGsD,KAoBW1C,UAlBtB,SAAmBb,EAAKwT,EAAa3T,GACjC,MAAM4T,EAAa,CAACzT,EAAKwT,GAMzB,OALAJ,EAAY7R,KAAKkS,GACU,IAAvBL,EAAYpQ,SACZmQ,EAAOD,EAAM1P,IAAQ3D,GAEzBG,EAAIuD,GACG,KACH,MAAMmL,EAAQ0E,EAAYrI,QAAQ0I,IACnB,IAAX/E,GACA0E,EAAYxC,OAAOlC,EAAO,GAEH,IAAvB0E,EAAYpQ,SACZmQ,IACAA,EAAO,SC1DvB,IAAIO,GAGOC,GAQAC,GASAC,GAoBAC,GAwBAC,IA5DX,SAAWJ,GACPA,EAASA,EAAa,GAAI,GAAK,KAC/BA,EAASA,EAAa,GAAI,GAAK,KAC/BA,EAASA,EAAa,GAAI,GAAK,KAC/BA,EAASA,EAAc,IAAI,GAAK,MAChCA,EAASA,EAAc,IAAI,GAAK,MALpC,CAMGA,KAAaA,GAAW,KAE3B,SAAWC,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAiB,IAAI,GAAK,MAN1C,CAOGA,KAAgBA,GAAc,KAEjC,SAAWC,GACPA,EAAqBA,EAA2B,KAAI,GAAK,OACzDA,EAAqBA,EAAiC,WAAI,GAAK,aAC/DA,EAAqBA,EAAgC,UAAI,GAAK,YAC9DA,EAAqBA,EAAsC,gBAAI,GAAK,kBAJxE,CAKGA,KAAyBA,GAAuB,KAC5C,MAAMG,GACT/O,YAAYgB,EAAO,GAAIgO,EAAgBL,GAAYM,IAAKC,EAAiB,EAAGC,GAAa,EAAMnD,EAAQ,aAAcoD,EAAa,GAAIC,EAAgBV,GAAYM,IAAKK,EAAiB,EAAGC,EAAa,IACpMtN,KAAKjB,KAAOA,EACZiB,KAAK+M,cAAgBA,EACrB/M,KAAKiN,eAAiBA,EACtBjN,KAAKkN,WAAaA,EAClBlN,KAAK+J,MAAQA,EACb/J,KAAKmN,WAAaA,EAClBnN,KAAKoN,cAAgBA,EACrBpN,KAAKqN,eAAiBA,EACtBrN,KAAKsN,WAAaA,IAI1B,SAAWV,GACPA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAoB,UAAI,GAAK,YAF1C,CAGGA,KAAaA,GAAW,KACpB,MAAMW,GACTxP,YAAYgB,EAAO,GAAIyO,EAAc,GAAIC,EAAQ,EAAGC,EAAS,EAAGnM,EAAOqL,GAASW,KAAMI,GAAa,GAC/F3N,KAAKjB,KAAOA,EACZiB,KAAKwN,YAAcA,EACnBxN,KAAKyN,MAAQA,EACbzN,KAAK0N,OAASA,EACd1N,KAAKuB,KAAOA,EACZvB,KAAK2N,WAAaA,GAGnB,MAAMC,GACT7P,YAAYgB,EAAO,GAAImO,EAAaP,GAAqBkB,WAAYC,EAAUpB,GAAYM,IAAKe,EAAW,EAAGP,EAAc,IACxHxN,KAAKjB,KAAOA,EACZiB,KAAKkN,WAAaA,EAClBlN,KAAK8N,QAAUA,EACf9N,KAAK+N,SAAWA,EAChB/N,KAAKwN,YAAcA,IAI3B,SAAWX,GACPA,EAAqBA,EAA+B,SAAI,GAAK,WAC7DA,EAAqBA,EAA6B,OAAI,GAAK,SAC3DA,EAAqBA,EAA4B,MAAI,GAAK,QAC1DA,EAAqBA,EAA4B,MAAI,GAAK,QAJ9D,CAKGA,KAAyBA,GAAuB,KAC5C,MAAMmB,GACTjQ,YAAYwD,EAAOsL,GAAqBoB,SAAUlP,EAAO,GAAImP,EAAS,IAClElO,KAAKuB,KAAOA,EACZvB,KAAKjB,KAAOA,EACZiB,KAAKkO,OAASA,GAGf,MAAMC,GACTpQ,YAAYgB,EAAO,GAAImP,EAAS,GAAIV,EAAc,IAC9CxN,KAAKjB,KAAOA,EACZiB,KAAKkO,OAASA,EACdlO,KAAKwN,YAAcA,GAGpB,MAAMY,GACTrQ,YAAYgB,EAAO,GAAIlD,EAAM,EAAGwS,EAAU,GACtCrO,KAAKjB,KAAOA,EACZiB,KAAKnE,IAAMA,EACXmE,KAAKqO,QAAUA,GA+EhB,MAAMlP,GAAO4M,GAAqE,QAA1DS,GAAK8B,KAAKC,MAAM5R,OAAO6R,aAAaC,QAAQ,gBAA6B,IAAPjC,GAAgBA,GAAK,IA5E/G,MACHzO,cACIiC,KAAKjB,KAAO,GACZiB,KAAK0O,YAAc,GACnB1O,KAAK2O,MAAQ,EACb3O,KAAK4O,WAAa,GAClB5O,KAAK6O,KAAO,GACZ7O,KAAK8O,UAAY,GACjB9O,KAAK+O,IAAM,EACX/O,KAAKgP,cAAgB,CACjBjR,CAAC2O,GAAYM,KAAM,GACnBjP,CAAC2O,GAAYuC,KAAM,GACnBlR,CAAC2O,GAAYwC,KAAM,GACnBnR,CAAC2O,GAAYyC,KAAM,GACnBpR,CAAC2O,GAAY0C,KAAM,GACnBrR,CAAC2O,GAAY2C,KAAM,IAEvBrP,KAAKsP,MAAQ,GACbtP,KAAKuP,cAAgB,GACrBvP,KAAKwP,aAAc,EACnBxP,KAAKyP,YAAc,EACnBzP,KAAK0P,aAAe,CAChB3R,CAAC2O,GAAYM,MAAM,EACnBjP,CAAC2O,GAAYuC,MAAM,EACnBlR,CAAC2O,GAAYwC,MAAM,EACnBnR,CAAC2O,GAAYyC,MAAM,EACnBpR,CAAC2O,GAAY0C,MAAM,EACnBrR,CAAC2O,GAAY2C,MAAM,GAEvBrP,KAAK2P,OAAS,CACVC,WAAYjD,GAAqBkD,KACjCC,eAAgBnD,GAAqBkD,KACrCE,OAAQpD,GAAqBkD,KAC7BG,UAAWrD,GAAqBkD,KAChCI,UAAWtD,GAAqBkD,KAChCK,QAASvD,GAAqBkD,KAC9BM,QAASxD,GAAqBkD,KAC9BO,aAAczD,GAAqBkD,KACnCQ,cAAe1D,GAAqBkD,KACpCS,SAAU3D,GAAqBkD,KAC/BU,OAAQ5D,GAAqBkD,KAC7BW,WAAY7D,GAAqBkD,KACjChT,YAAa8P,GAAqBkD,KAClCY,WAAY9D,GAAqBkD,KACjCa,SAAU/D,GAAqBkD,KAC/Bc,cAAehE,GAAqBkD,KACpCe,QAASjE,GAAqBkD,KAC9BgB,SAAUlE,GAAqBkD,MAEnC7P,KAAK8Q,WAAa,GAClB9Q,KAAK+Q,MAAQ,GACb/Q,KAAKgR,GAAK,CACNnV,IAAK,GACLwS,QAAS,GACT4C,KAAM,GAEVjR,KAAKkR,QAAU,CACXrV,IAAK,EACLwS,QAAS,EACT9M,KAAMkL,GAAS0E,IAEnBnR,KAAKoR,WAAa,CACdC,QAAS,EACTC,QAAS,GAEbtR,KAAKuR,QAAU,GACfvR,KAAKwR,UAAY,GACjBxR,KAAKyR,KAAO,EACZzR,KAAK0R,OAAS,GACd1R,KAAK2R,OAAS,GACd3R,KAAK4R,MAAQ,GACb5R,KAAK6R,MAAQ,GACb7R,KAAK8R,SAAW,CAAC,IAAI1D,GAAQ,kBAAmB,IAAIA,GAAQ,mBAC5DpO,KAAK+R,SAAW,MAIxB5S,GAAKxF,UFlKE,SAAkBZ,EAAIkJ,GACzB,IAAI+P,EAAQ,KACZ,MAAO,IAAIC,KACPC,aAAaF,GACbA,EAAQG,WAAWpZ,EAAIkJ,KAAUgQ,IE8J1BG,EAASjT,GAAQxC,OAAO6R,aAAa6D,QAAQ,QAAS/D,KAAKgE,UAAUnT,KAAQ,MAC5F,MAAMoT,GAAe,CACjBxU,CAAC2O,GAAYM,KAAM,WACnBjP,CAAC2O,GAAYuC,KAAM,YACnBlR,CAAC2O,GAAYwC,KAAM,eACnBnR,CAAC2O,GAAYyC,KAAM,eACnBpR,CAAC2O,GAAY0C,KAAM,SACnBrR,CAAC2O,GAAY2C,KAAM,YAEVmD,GDlHb,SAAiBC,EAAQ1Z,EAAI2Z,GACzB,MAAMC,GAAUzJ,MAAM0J,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAO/Z,EAAG+C,OAAS,EACzB,MA5DO,CACHnC,UAAWoS,GA2DC2G,GAAgBpW,IAC5B,IAAIyW,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVnM,EAAUnO,EACd,MAAMua,EAAO,KACT,GAAID,EACA,OAEJnM,IACA,MAAMqM,EAASpa,EAAG4Z,EAASK,EAAO,GAAKA,EAAQ1W,GAC3CwW,EACAxW,EAAI6W,GAGJrM,EAAUxN,EAAY6Z,GAAUA,EAASxa,GAG3Cya,EAAgBP,EAAa5K,KAAI,CAACrO,EAAOmC,IAAMpC,EAAUC,GAAQyC,IACnE2W,EAAOjX,GAAKM,EACZ4W,KAAa,GAAKlX,GACdgX,GACAG,OAEL,KACCD,GAAY,GAAKlX,OAIrB,OAFAgX,GAAS,EACTG,IACO,WACH/Z,EAAQia,GACRtM,QA1F8BnN,WCuKnB0Z,CAAalU,IAAMA,IACtC,MAAM6P,EAAgB9E,GAAU/K,EAAK6P,eAAe,CAACsE,EAAM/R,MACvDwM,SAAUnS,KAAK2X,OAAOD,EAAO,IAAM,GACnCvU,KAAMwT,GAAahR,OAEvB,SAASiS,EAAiB1F,EAASvM,GAC/B,OAAQyN,EAAclB,GAASC,UAC1BxM,GAAQoL,GAAqBkB,WACxB1O,EAAKsQ,YACLlO,GAAQoL,GAAqB8G,UACN,EAAnBtU,EAAKsQ,YACLlO,GAAQoL,GAAqB+G,gBACzB9X,KAAK2X,MAAMpU,EAAKsQ,YAAc,GAC9B,GAEtB,IAAIkE,EAASxU,EAAKsS,KACdmC,EAAWhY,KAAK2X,MAAMI,EAAS,KACnCA,GAAkB,IAClB,IAAIE,EAAOjY,KAAK2X,MAAMI,EAAS,KAC/BA,GAAkB,IAClB,IAAIG,EAAWlY,KAAK2X,MAAMI,EAAS,IACnCA,GAAkB,GAClB,IAAII,EAASnY,KAAK2X,MAAMI,EAAS,IAEjC,OADAA,GAAkB,GACX,CACH3E,cAAAA,EACAU,aAAcxF,GAAU/K,EAAKuQ,cAAc,CAACxC,EAAY3L,MACpDwM,SAAUiB,EAAczN,GAAMwM,UAAYb,EAAa/N,EAAKsQ,YAAc,GAC1E1Q,KAAMwT,GAAahR,OAEvB+N,MAAOnQ,EAAKmQ,MAAMrH,KAAI+L,KAClBlG,QAASyE,GAAayB,EAAKlG,SAC3BC,SAAUyF,EAAiBQ,EAAKlG,QAASkG,EAAK9G,gBAElDyC,OAAQ,CACJC,WAAY,CACR7Q,KAAM,mBACNgP,SAAUyF,EAAiB9G,GAAYuC,IAAK9P,EAAKwQ,OAAOC,aAE5DE,eAAgB,CACZ/Q,KAAM,wBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOG,iBAE5DC,OAAQ,CACJhR,KAAM,eACNgP,SAAUyF,EAAiB9G,GAAYyC,IAAKhQ,EAAKwQ,OAAOI,SAE5DC,UAAW,CACPjR,KAAM,kBACNgP,SAAUyF,EAAiB9G,GAAYM,IAAK7N,EAAKwQ,OAAOK,YAE5DC,UAAW,CACPlR,KAAM,kBACNgP,SAAUyF,EAAiB9G,GAAY2C,IAAKlQ,EAAKwQ,OAAOM,YAE5DC,QAAS,CACLnR,KAAM,gBACNgP,SAAUyF,EAAiB9G,GAAYyC,IAAKhQ,EAAKwQ,OAAOO,UAE5DC,QAAS,CACLpR,KAAM,gBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOQ,UAE5DC,aAAc,CACVrR,KAAM,iBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOS,eAE5DC,cAAe,CACXtR,KAAM,sBACNgP,SAAUyF,EAAiB9G,GAAYyC,IAAKhQ,EAAKwQ,OAAOU,gBAE5DC,SAAU,CACNvR,KAAM,iBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOW,WAE5DC,OAAQ,CACJxR,KAAM,eACNgP,SAAUyF,EAAiB9G,GAAYyC,IAAKhQ,EAAKwQ,OAAOY,SAE5DC,WAAY,CACRzR,KAAM,mBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOa,aAE5D3T,YAAa,CACTkC,KAAM,oBACNgP,SAAUyF,EAAiB9G,GAAY2C,IAAKlQ,EAAKwQ,OAAO9S,cAE5D4T,WAAY,CACR1R,KAAM,mBACNgP,SAAUyF,EAAiB9G,GAAY2C,IAAKlQ,EAAKwQ,OAAOc,aAE5DC,SAAU,CACN3R,KAAM,iBACNgP,SAAUyF,EAAiB9G,GAAYyC,IAAKhQ,EAAKwQ,OAAOe,WAE5DC,cAAe,CACX5R,KAAM,wBACNgP,SAAUyF,EAAiB9G,GAAYuC,IAAK9P,EAAKwQ,OAAOgB,gBAE5DC,QAAS,CACL7R,KAAM,gBACNgP,SAAUyF,EAAiB9G,GAAYuC,IAAK9P,EAAKwQ,OAAOiB,UAE5DC,SAAU,CACN9R,KAAM,iBACNgP,SAAUyF,EAAiB9G,GAAY0C,IAAKjQ,EAAKwQ,OAAOkB,YAGhEU,QAASpS,EAAKoS,QAAQtJ,KAAIgM,KACtBhH,eAAgB+B,EAAciF,EAAOlH,eAAegB,SAChDkG,EAAOhH,gBACNgH,EAAO/G,WAAa/N,EAAKsQ,YAAc,GAC5CyE,eAAgB,GAAGD,EAAO9G,cAAc6B,EAAciF,EAAO7G,eAAeW,SAAWkG,EAAO5G,qBAElGoE,KAAM,CACFkC,OAAAA,EACAI,OAAAA,EACAD,SAAAA,EACAD,KAAAA,EACAD,SAAAA,GAEJO,YAAahV,EAAKqS,UAAU4C,QAAO,CAAC9J,EAAK+J,IAAS/J,EAAM+J,EAAK3G,QAAQ,OC9O7E,SAAS4G,GAAShS,GACd,MAAM9E,EAAI8E,EAAI,EACd,OAAO9E,EAAIA,EAAIA,EAAI,EAsCvB,SAAS+W,GAAOjS,GACZ,OAAOA,EAAIA,EAEf,SAASkS,GAAQlS,GACb,OAAQA,GAAKA,EAAI,GC/DrB,SAASmS,GAAKvW,GAAM+D,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGgF,OAAEA,EAAS0N,GAAW,IACjE,MAAMnO,GAAKoO,iBAAiBzW,GAAM0W,QAClC,MAAO,CACH3S,MAAAA,EACAD,SAAAA,EACAgF,OAAAA,EACAE,IAAK5E,GAAK,YAAYA,EAAIiE,GA0ClC,SAASsO,GAAM3W,GAAM+D,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGgF,OAAEA,EAASsN,GAAQtI,MAAEA,EAAQ,EAAC4I,QAAEA,EAAU,GAAM,IAC5F,MAAMtR,EAAQqR,iBAAiBzW,GACzB4W,GAAkBxR,EAAMsR,QACxBG,EAAgC,SAApBzR,EAAMyR,UAAuB,GAAKzR,EAAMyR,UACpDC,EAAK,EAAIhJ,EACTiJ,EAAKH,GAAkB,EAAIF,GACjC,MAAO,CACH3S,MAAAA,EACAD,SAAAA,EACAgF,OAAAA,EACAE,IAAK,CAACgO,EAAIC,IAAM,sBACRJ,WAAmB,EAAKC,EAAKG,uBAC/BL,EAAkBG,EAAKE,udCvFrBnT,SAAU,IAAKgF,OAAQuN,GAAQtS,MAAO,sDAPzCD,SAAU,IAAKgF,OAAQuN,2DNy2BpC,SAA+BrW,EAAMnF,EAAI2N,GACrC,IAEIC,EAFAC,EAAS7N,EAAGmF,EAAMwI,GAClBG,GAAU,EAEd,MAAMuO,EAAQrP,GAEd,SAASgB,IACL,MAAM9E,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGgF,OAAEA,EAASpO,EAAQqO,KAAEA,EAAOtO,EAAIuO,IAAEA,GAAQN,GAAUJ,GACjFU,IACAP,EAAiB5E,EAAY7D,EAAM,EAAG,EAAG8D,EAAUC,EAAO+E,EAAQE,IACtE,MAAMC,EAAavK,IAAQqF,EACrBmF,EAAWD,EAAanF,EAC9B6C,GAAoB,IAAMa,GAASxH,GAAM,EAAO,WAChDR,GAAKd,IACD,GAAIiK,EAAS,CACT,GAAIjK,GAAOwK,EAQP,OAPAH,EAAK,EAAG,GACRvB,GAASxH,GAAM,EAAO,SACfkX,EAAMnP,GAGT9M,EAAQic,EAAM9X,IAEX,EAEX,GAAIV,GAAOuK,EAAY,CACnB,MAAM7E,EAAI0E,GAAQpK,EAAMuK,GAAcnF,GACtCiF,EAAK,EAAI3E,EAAGA,IAGpB,OAAOuE,KAaf,OAtCAuO,EAAMnP,GAAK,EA4BP3M,EAAYsN,GACZpB,KAAOC,MAAK,KAERmB,EAASA,IACTG,OAIJA,IAEG,CACHhJ,IAAIsX,GACIA,GAASzO,EAAOK,MAChBL,EAAOK,KAAK,EAAG,GAEfJ,IACIF,GACApD,EAAYrF,EAAMyI,GACtBE,GAAU,YM35BZ7E,SAAU,IAAKgF,OAAQwN,mHAL7B9O,EAAWvB,4EN6qBnB,SAAgBlK,EAAWuF,GACvB,MAAM3F,EAAYI,EAAUE,GAAGN,UAAU2F,EAAM+B,MAC3C1H,GACAA,EAAUmB,QAAQ3B,SAAQN,GAAMA,EAAGyG,gBMzqBzBkG,EAAS,q8BCCX,WAATlL,QAEc,aAATA,iFAO8EA,qJAD5DiB,IAAVjB,MAAiC,KAAVA,uGAT5BA,gMAU2EA,+BAD5DiB,IAAVjB,MAAiC,KAAVA,mBAT5BA,2HAVF6B,YACAiZ,WACA/T,EAAe,uBACfgU,EAAsB,aAE7BC,EAAQ,qfCWShb,uHAAAA,iIADZA,0BAALsB,sEAFyDtB,2cADhDA,yOACgDA,uBAEpDA,aAALsB,+HAAAA,kCAHStB,2IAPFib,YACAH,YACAjZ,YACPmZ,iUCCDhb,KAAQ,MAAQ,+DAFqCA,gOAFjCA,wCACwCA,+HAAAA,eACPA,kBAErDA,KAAQ,MAAQ,oCAJIA,oEALZ6B,YACAiZ,eACAI,GAAoB,qIAIgCrZ,sTCoB9CZ,IAAVjB,wEAFMA,0LAEIiB,IAAVjB,gFAFMA,0OATIiB,IAAVjB,0EAFQA,oLAEEiB,IAAVjB,gFAFQA,yKAeFA,KAAMiJ,MAAM,0BAAjB3H,oOAAKtB,KAAMiJ,MAAM,aAAjB3H,+HAAAA,0DAC4BtB,KAAK,QAAWA,KAAKQ,MAAM,4HAA3BR,KAAK,2BAAWA,KAAKQ,MAAM,8DAZlDR,KAAMiJ,MAAM,0BAAjB3H,oOAAKtB,KAAMiJ,MAAM,aAAjB3H,+HAAAA,0DAC4BtB,KAAK,QAAWA,KAAKQ,MAAM,4HAA3BR,KAAK,2BAAWA,KAAKQ,MAAM,8GAP5DR,gXATCgb,EAAQ,YAEDG,YACAC,YACAN,2MAERhS,OAAiB7H,IAATka,EAAqB,aAAeA,OAAOla,2RC6BpCjB,6XACoBA,KAAOuE,gBAAPvE,KAAOuE,8HAGGvE,KAAOuS,yBAAPvS,KAAOuS,yJAEgBvS,KAAOyS,0BAAPzS,KAAOyS,iIAEjCzS,KAAO0S,sBAAP1S,KAAO0S,sJAKmB1S,KAAO2S,sBAAP3S,KAAO2S,qIAE9B3S,KAAO4S,yBAAP5S,KAAO4S,yJAEgB5S,KAAO6S,0BAAP7S,KAAO6S,qKAGI7S,KAAO8S,sBAAP9S,KAAO8S,0HAC7B9S,KAAOuP,iBAAPvP,KAAOuP,0rCAIgBvP,kBACIA,uDAzBjDA,KAAOuE,gEAGGvE,KAAOuS,yEAEgBvS,KAAOyS,0EAEjCzS,KAAO0S,sEAKmB1S,KAAO2S,sEAE9B3S,KAAO4S,yEAEgB5S,KAAO6S,0EAGI7S,KAAO8S,sEAC7B9S,KAAOuP,6nBAcxDvP,KAAOuE,UACPvE,KAAS+W,QAAQ/W,OAAGyS,oBAExBzS,KAAS+W,QAAQ/W,OAAG0Z,oBACpB1Z,KAAO8S,wYAJH9S,KAAOuE,6BACPvE,KAAS+W,QAAQ/W,OAAGyS,uCAExBzS,KAAS+W,QAAQ/W,OAAG0Z,uCACpB1Z,KAAO8S,yIALL9S,KAAM+W,6BAAXzV,kcAUctB,yCAVTA,KAAM+W,gBAAXzV,+HAAAA,mFAnCDtB,qLAAAA,2WA1BCyZ,EAFA4B,GAAa,WAIRC,EAAKC,OACZ9B,EAAS8B,OACTF,GAAa,YASNG,kBAEPH,GAAa,SAQTJ,EAAQlL,GAAamC,oCAfzBuH,MAAanH,IACbmJ,EAAM1E,QAAQlX,KAAK4Z,OACnB4B,GAAa,iBASbI,EAAM1E,QAAQ7H,OAAOuM,EAAM1E,QAAQ1N,QAAQoQ,GAAS,GACpD+B,kCAQoC/B,EAAOlV,UAAPkV,EAAOlV,2CAGGkV,EAAOlH,mBAAPkH,EAAOlH,oDAEgBkH,EAAOhH,oBAAPgH,EAAOhH,qDAEjCgH,EAAO/G,gBAAP+G,EAAO/G,iDAKmB+G,EAAO9G,gBAAP8G,EAAO9G,iDAE9B8G,EAAO7G,mBAAP6G,EAAO7G,oDAEgB6G,EAAO5G,oBAAP4G,EAAO5G,qDAGI4G,EAAO3G,gBAAP2G,EAAO3G,iDAC7B2G,EAAOlK,WAAPkK,EAAOlK,oBAoBS+L,EAAK7B,moBC3D7DzZ,KAAQqB,2BAG6CrB,KAAQ6T,+BAC/B7T,KAAQuE,wGAJtCvE,KAAQqB,SAARrB,KAAQqB,uBAG6CrB,KAAQ6T,aAAR7T,KAAQ6T,wBAC/B7T,KAAQuE,UAARvE,KAAQuE,mYAXnDvE,KAAMsX,8BAAXhW,qVAekCtB,0CAf7BA,KAAMsX,iBAAXhW,0HAAAA,+DAAAA,mNARAqD,GAAK+F,QAAO/F,IACVA,EAAK2S,SAASzX,SAAS+T,GAAQ,mBACxBjP,yBAaiBtD,gDAGqDwS,oDACvBtP,0QCUxCvE,uTACoBA,KAAQuE,eAARvE,KAAQuE,8GACNvE,KAAQ0T,iBAAR1T,KAAQ0T,wIAC+B1T,KAAQgT,sBAARhT,KAAQgT,6OAFjDhT,KAAQuE,gEACNvE,KAAQ0T,kEAC+B1T,KAAQgT,inBAGJhT,kBACIA,8FAShFA,KAAQuE,UAMWvE,KAAQ0T,YAG3B1T,KAAQgT,mlBATRhT,KAAQuE,6BAMWvE,KAAQ0T,+BAG3B1T,KAAQgT,8EAZRhT,KAAMuX,8BAAXjW,+NAgB+BtB,yCAhB1BA,KAAMuX,iBAAXjW,uIAAAA,2EAdCtB,gNAAAA,gVAxBC0b,EAFAL,GAAa,WAIRC,EAAKK,OACZD,EAAUC,OACVN,GAAa,YASNG,kBAEPH,GAAa,iCAPbK,MAAc/H,IACd8H,EAAMlE,SAAS1X,KAAK6b,OACpBL,GAAa,iBASbI,EAAMlE,SAASrI,OAAOuM,EAAMlE,SAASlO,QAAQqS,GAAU,GACvDF,gCAMoCE,EAAQnX,UAARmX,EAAQnX,2CACNmX,EAAQhI,YAARgI,EAAQhI,6CAC+BgI,EAAQ1I,iBAAR0I,EAAQ1I,0BAgB/CsI,EAAKI,6RCJ3B1b,qWACoBA,KAAKuE,eAALvE,KAAKuE,yIAEyBvE,KAAKiT,gBAALjT,KAAKiT,2IACJjT,KAAKkT,iBAALlT,KAAKkT,oFAC1ClT,uCAAmBA,KAAK+G,eAAL/G,KAAK+G,wFAChB/G,KAAK+G,OAASqL,GAASwJ,2CAAuB5b,KAAKmT,qBAALnT,KAAKmT,4IAEZnT,KAAKgT,sBAALhT,KAAKgT,6sBAGDhT,mBACIA,6DAXjDA,KAAKuE,qEAEyBvE,KAAKiT,sEACJjT,KAAKkT,uEACvBlT,KAAK+G,+DAChB/G,KAAK+G,OAASqL,GAASwJ,uCAAuB5b,KAAKmT,2EAEZnT,KAAKgT,2cAoBvEhT,KAAKiT,WACLjT,KAAKuE,UAETvE,KAAKkT,YAIkBlT,KAAKgT,uhBARRhT,KAAKmT,6LACrBnT,KAAKiT,kCACLjT,KAAKuE,iCAETvE,KAAKkT,mCAIkBlT,KAAKgT,kDARRhT,KAAKmT,gGAarBnT,KAAKiT,WACLjT,KAAKuE,UAETvE,KAAKkT,YAIkBlT,KAAKgT,ilBAPxBhT,KAAKiT,kCACLjT,KAAKuE,iCAETvE,KAAKkT,mCAIkBlT,KAAKgT,kJAOZhT,KAAS2Z,iBA5BzB3Z,KAAMgX,UAAU7N,oCAArB7H,uCAYKtB,KAAMgX,UAAU7N,qCAArB7H,89BApBwDtB,sCACAA,sCACAA,sCACAA,sCACAA,iQAJiBA,qCACAA,qCACEA,qCACJA,qCACIA,mBA6B7DA,8CAjC0CA,UAAAA,2BACAA,UAAAA,2BACAA,UAAAA,2BACAA,UAAAA,4BACAA,UAAAA,4BAInDA,KAAMgX,UAAU7N,sBAArB7H,oIAAAA,iCAYKtB,KAAMgX,UAAU7N,uBAArB7H,yIAAAA,wBAgBqBtB,KAAS2Z,6IAvD/B3Z,qMAAAA,qXAtCC6Z,EADAwB,GAAa,WAGRC,EAAKO,OACZhC,EAAOgC,OACPR,GAAa,YASNG,kBAEPH,GAAa,SAQTS,EAAQ/L,GAAaqC,eAErB+G,EAAMI,OAAEA,EAAMD,SAAEA,EAAQD,KAAEA,EAAID,SAAEA,GAAa2C,EAAS9E,oDAUzDwE,EAAMxE,KAAOkC,EAAkB,GAATI,EAAyB,GAAXD,EAAuB,IAAPD,EAAwB,IAAXD,0CA3BlES,MAAW9G,IACX0I,EAAMzE,UAAUnX,KAAKga,OACrBwB,GAAa,iBASbI,EAAMzE,UAAU9H,OAAOuM,EAAMzE,UAAU3N,QAAQwQ,GAAO,GACtD2B,sBAQArC,EAAS4C,EAAS9E,KAAKkC,YACvBI,EAASwC,EAAS9E,KAAKsC,YACvBD,EAAWyC,EAAS9E,KAAKqC,cACzBD,EAAO0C,EAAS9E,KAAKoC,UACrBD,EAAW2C,EAAS9E,KAAKmC,sCAQWS,EAAKtV,UAALsV,EAAKtV,2CAEyBsV,EAAK5G,WAAL4G,EAAK5G,4CACJ4G,EAAK3G,YAAL2G,EAAK3G,6CACvB2G,EAAK9S,UAAL8S,EAAK9S,2CAC8B8S,EAAK1G,gBAAL0G,EAAK1G,iDAEZ0G,EAAK7G,iBAAL6G,EAAK7G,kCAUxBmG,mCACAI,mCACAD,mCACAD,mCACAD,wBAI5BrN,GAAKA,EAAEhF,OAASqL,GAASwJ,aAOqBN,EAAKzB,GAKnD9N,GAAKA,EAAEhF,OAASqL,GAASW,QAOqBuI,EAAKzB,qPC1DjE7Z,yXAC8DA,KAAKuE,eAALvE,KAAKuE,yGAM3E1C,MAAOsQ,GAAqBkD,KAAM3Q,KAAM,SACxC7C,MAAOsQ,GAAqBkB,WAAY3O,KAAM,eAC9C7C,MAAOsQ,GAAqB8G,UAAWvU,KAAM,cAC7C7C,MAAOsQ,GAAqB+G,gBAAiBxU,KAAM,wDAE3C1E,KAAK0S,qBAAL1S,KAAK0S,gJAEwC1S,KAAKsT,kBAALtT,KAAKsT,yIAEWtT,KAAKgT,sBAALhT,KAAKgT,0nBAGDhT,kBACIA,uDAnBPA,KAAKuE,gEAWnEvE,KAAK0S,sEAEwC1S,KAAKsT,mEAEWtT,KAAKgT,+WAcvEhT,KAAKuE,UACLvE,KAAS8U,MAAM9U,OAAKuT,cACpBvT,KAAS8U,MAAM9U,OAAKsT,aAGFtT,KAAKgT,4jBALvBhT,KAAKuE,6BACLvE,KAAS8U,MAAM9U,OAAKuT,iCACpBvT,KAAS8U,MAAM9U,OAAKsT,gCAGFtT,KAAKgT,0FAP3BhT,KAAM8U,2BAAXxT,ybAUmCtB,yCAV9BA,KAAM8U,cAAXxT,4HAAAA,mEA7BDtB,yOAAAA,yWA1BCwZ,EADA6B,GAAa,QAGXJ,EAAQlL,GAAamC,aAElBoJ,EAAKU,OACZxC,EAAOwC,OACPX,GAAa,YASNG,kBAEPH,GAAa,qCAPb7B,MAAWpG,IACXqI,EAAM3G,MAAMjV,KAAK2Z,OACjB6B,GAAa,iBASbI,EAAM3G,MAAM5F,OAAOuM,EAAM3G,MAAMzL,QAAQmQ,GAAO,GAC9CgC,gCAM8EhC,EAAKjV,UAALiV,EAAKjV,2CAWnEiV,EAAK9G,gBAAL8G,EAAK9G,iDAEwC8G,EAAKlG,aAALkG,EAAKlG,8CAEWkG,EAAKxG,iBAALwG,EAAKxG,0BAiBXsI,EAAK9B,qOChC5DxZ,mVAE2BA,KAAY+G,eAAZ/G,KAAY+G,iJACmB/G,KAAYuE,eAAZvE,KAAYuE,uHACtBvE,KAAY0T,iBAAZ1T,KAAY0T,skBAIK1T,kBACIA,uDAP1CA,KAAY+G,gEACmB/G,KAAYuE,gEACtBvE,KAAY0T,sRAcnErB,GAAqBrS,KAAY+G,WACjC/G,KAAYuE,qTADZ8N,GAAqBrS,KAAY+G,8BACjC/G,KAAYuE,iHAFdvE,KAAM+U,mCAAXzT,+YAKmCtB,yCAL9BA,KAAM+U,sBAAXzT,4HAAAA,mEAlBDtB,yLAAAA,iVA1BCiV,EAFAoG,GAAa,WAIRC,EAAKW,OACZhH,EAAcgH,OACdZ,GAAa,YASNG,kBAEPH,GAAa,SAQTJ,EAAQlL,GAAasC,kCAfzB4C,MAAkBzB,IAClBiI,EAAM1G,cAAclV,KAAKoV,OACzBoG,GAAa,iBASbI,EAAM1G,cAAc7F,OAAOuM,EAAM1G,cAAc1L,QAAQ4L,GAAc,GACrEuG,kCAS2CvG,EAAYlO,UAAZkO,EAAYlO,2CACmBkO,EAAY1Q,UAAZ0Q,EAAY1Q,2CACtB0Q,EAAYvB,YAAZuB,EAAYvB,qBAgBF4H,EAAKrG,6UC3C/DjV,yPAILA,KAAMuE,oOAEI4N,GAAqBkD,iCACrBlD,GAAqBkB,uCACrBlB,GAAqB8G,sCACrB9G,GAAqB+G,2CAJlBlZ,KAAMmV,OAAOnV,kHAAbA,KAAMmV,OAAOnV,2DAD1BA,KAAMuE,0BACOvE,KAAMmV,OAAOnV,2FAF5BvB,OAAOmR,QAAQ5P,KAASmV,6BAA7B7T,imBAYiFtB,wCAZ5EvB,OAAOmR,QAAQ5P,KAASmV,gBAA7B7T,+HAAAA,6FAwBCtB,KAAMmV,OAAOnV,OAAQmS,GAAqBkB,WACvC,YACArT,KAAMmV,OAAOnV,OAAQmS,GAAqB8G,UAC1C,qBACAjZ,KAAMmV,OAAOnV,OAAQmS,GAAqB+G,gBAC1C,0BACA,4BAEClZ,KAAMuT,cACNvT,KAAMuE,uOATVvE,KAAMmV,OAAOnV,OAAQmS,GAAqBkB,WACvC,YACArT,KAAMmV,OAAOnV,OAAQmS,GAAqB8G,UAC1C,qBACAjZ,KAAMmV,OAAOnV,OAAQmS,GAAqB+G,gBAC1C,0BACA,+CAEClZ,KAAMuT,iCACNvT,KAAMuE,gGAXR9F,OAAOmR,QAAQ5P,KAASmV,6BAA7B7T,8YAAK7C,OAAOmR,QAAQ5P,KAASmV,gBAA7B7T,+HAAAA,mEA1BDtB,uNAAAA,wWAPCqb,GAAa,8BAGfA,GAAa,gBAUWI,EAAMtG,OAAOtF,8BAiBqDwL,GAAa,sZCT5Erb,mDAAJA,yIADVuP,GAAM,EAAG,yBAAdjO,sZADgBtB,KAAMmU,oZADPnU,KAAMkU,0EACLlU,KAAMmU,2CASTnU,KAAMoU,gDAINpU,KAAMqU,0CAINrU,KAAMsU,+CAINtU,KAAMuU,oKAtBJvU,KAAMkU,iBAANlU,KAAMkU,8BAEhB3E,GAAM,EAAG,YAAdjO,+HAAAA,mBADgBtB,KAAMmU,yBASTnU,KAAMoU,gBAANpU,KAAMoU,8BAINpU,KAAMqU,UAANrU,KAAMqU,wBAINrU,KAAMsU,eAANtU,KAAMsU,6BAINtU,KAAMuU,SAANvU,KAAMuU,iJAWZvU,MAAQuE,UACSvE,MAAQuT,kYAIlBvT,KAAMwU,cAAcxU,uEAL3BA,MAAQuE,gCACSvE,MAAQuT,0CAIlBvT,KAAMwU,cAAcxU,YAApBA,KAAMwU,cAAcxU,mkBAUCA,KAAMgV,qFAANhV,KAAMgV,4SAOchV,KAAMiV,uFAANjV,KAAMiV,iBAANjV,KAAMiV,+EASzCjV,MAAMuT,cACzBvT,MAAMuE,+OAF2CvE,KAAMkV,aAAalV,4GAAnBA,KAAMkV,aAAalV,uBACjDA,MAAMuT,oCACzBvT,MAAMuE,iEAJJ9F,OAAOmR,QAAQ5P,KAASkV,mCAA7B5T,6KAAK7C,OAAOmR,QAAQ5P,KAASkV,sBAA7B5T,uIAAAA,4DAagB,GAAKtB,KAASmV,OAAOa,WAAWzC,kOAAhC,GAAKvT,KAASmV,OAAOa,WAAWzC,2LASiBvT,KAAMsW,wEAANtW,KAAMsW,gBAANtW,KAAMsW,8DAG7CtW,KAASwU,cAActC,GAAYuC,KAAKlB,uHAAxCvT,KAASwU,cAActC,GAAYuC,KAAKlB,2KAGDvT,KAAMuW,mEAANvW,KAAMuW,WAANvW,KAAMuW,uaAMoBvW,KAAMwW,GAAGnV,kCAGjCrB,KAAMwW,GAAG3C,iGAHe7T,KAAMwW,GAAGnV,SAATrB,KAAMwW,GAAGnV,0BAGjCrB,KAAMwW,GAAG3C,aAAT7T,KAAMwW,GAAG3C,yLAMX7T,KAAMwW,GAAGC,kEAATzW,KAAMwW,GAAGC,UAATzW,KAAMwW,GAAGC,wDAezDzW,gKADZvB,OAAOmR,QAAQqC,IAAU9I,gCAA9B7H,yZADsCtB,KAAM0W,QAAQ3P,gEAJxC/G,KAAM0W,QAAQrV,2BAGuCrB,KAAM0W,QAAQ7C,0EACzC7T,KAAM0W,QAAQ3P,uHAJxC/G,KAAM0W,QAAQrV,SAAdrB,KAAM0W,QAAQrV,0BAGuCrB,KAAM0W,QAAQ7C,aAAd7T,KAAM0W,QAAQ7C,0BAE1EpV,OAAOmR,QAAQqC,IAAU9I,mBAA9B7H,+HAAAA,mBADsCtB,KAAM0W,QAAQ3P,sJAUnD/G,KAAM4W,WAAWC,SAAW,EAAI,YAAc,4BAG9C7W,KAAM4W,WAAWC,SAAW,EAAI,YAAc,4BAG9C7W,KAAM4W,WAAWC,SAAW,EAAI,YAAc,4BAM9C7W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,4BAGxD9W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,4BAGxD9W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,u5BAlBxD9W,KAAM4W,WAAWC,SAAW,EAAI,YAAc,kDAG9C7W,KAAM4W,WAAWC,SAAW,EAAI,YAAc,kDAG9C7W,KAAM4W,WAAWC,SAAW,EAAI,YAAc,kDAM9C7W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,kDAGxD9W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,kDAGxD9W,KAAM4W,WAAWE,SAAW,EAAI,sBAAwB,4KAUxB9W,KAAMkX,2DAANlX,KAAMkX,gIAGNlX,KAAMmX,2DAANnX,KAAMmX,gIAGNnX,KAAMoX,0DAANpX,KAAMoX,+HAGNpX,KAAMqX,0DAANrX,KAAMqX,+RAtIpC5Y,OAAOmR,QAAQ5P,KAASwU,sCAA7BlT,mrFArCetB,KAAMuE,qpBAANvE,KAAMuE,UAANvE,KAAMuE,gGAqChB9F,OAAOmR,QAAQ5P,KAASwU,wBAA7BlT,mIAAAA,wjCAAAA,qsCAwFuCyK,GAAqB,iBAATA,EAAE,mHAlIxDmQ,QAAQC,IAAIV,oBAKMA,EAAMlX,sCAOFkX,EAAMvH,6CACLuH,EAAMtH,oCASTsH,EAAMrH,4CAINqH,EAAMpH,sCAINoH,EAAMnH,2CAINmH,EAAMlH,sCAgBLkH,EAAMjH,cAAczN,uCAUC0U,EAAMzG,+CAOcyG,EAAMxG,iDAQXwG,EAAMvG,aAAanO,sCAoBN0U,EAAMnF,+CAMNmF,EAAMlF,0CAMoBkF,EAAMjF,GAAGnV,wCAGjCoa,EAAMjF,GAAG3C,4CAMX4H,EAAMjF,GAAGC,yCAS9DgF,EAAM/E,QAAQrV,wCAGuCoa,EAAM/E,QAAQ7C,4CACzC4H,EAAM/E,QAAQ3P,wBAO5BE,QAAMwU,EAAM7E,WAAWC,SAAW4E,EAAM7E,WAAWC,QAAU,GAAK,KAYlE5P,QAAMwU,EAAM7E,WAAWE,SAAW2E,EAAM7E,WAAWE,QAAU,GAAK,gBAmBzD2E,EAAMvE,wCAGNuE,EAAMtE,wCAGNsE,EAAMrE,uCAGNqE,EAAMpE,kXC3LrC,sEAAQ,CAAE5T,OAAQe,SAAS4X"}